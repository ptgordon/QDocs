
new2q.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00802000  00001c5a  00001cee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000be  00802004  00802004  00001cf2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001cf2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d24  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00001d68  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000362b  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b51  00000000  00000000  000055fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000030cc  00000000  00000000  0000614c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b68  00000000  00000000  00009218  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00026db1  00000000  00000000  00009d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a7c  00000000  00000000  00030b31  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  000325ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000926e  00000000  00000000  0003275d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
       2:	00 00       	nop
       4:	1b c1       	rjmp	.+566    	; 0x23c <__bad_interrupt>
       6:	00 00       	nop
       8:	19 c1       	rjmp	.+562    	; 0x23c <__bad_interrupt>
       a:	00 00       	nop
       c:	17 c1       	rjmp	.+558    	; 0x23c <__bad_interrupt>
       e:	00 00       	nop
      10:	15 c1       	rjmp	.+554    	; 0x23c <__bad_interrupt>
      12:	00 00       	nop
      14:	13 c1       	rjmp	.+550    	; 0x23c <__bad_interrupt>
      16:	00 00       	nop
      18:	11 c1       	rjmp	.+546    	; 0x23c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0f c1       	rjmp	.+542    	; 0x23c <__bad_interrupt>
      1e:	00 00       	nop
      20:	0d c1       	rjmp	.+538    	; 0x23c <__bad_interrupt>
      22:	00 00       	nop
      24:	0b c1       	rjmp	.+534    	; 0x23c <__bad_interrupt>
      26:	00 00       	nop
      28:	09 c1       	rjmp	.+530    	; 0x23c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	07 c1       	rjmp	.+526    	; 0x23c <__bad_interrupt>
      2e:	00 00       	nop
      30:	05 c1       	rjmp	.+522    	; 0x23c <__bad_interrupt>
      32:	00 00       	nop
      34:	03 c1       	rjmp	.+518    	; 0x23c <__bad_interrupt>
      36:	00 00       	nop
      38:	0c 94 2b 08 	jmp	0x1056	; 0x1056 <__vector_14>
      3c:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__vector_15>
      40:	0c 94 85 08 	jmp	0x110a	; 0x110a <__vector_16>
      44:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__vector_17>
      48:	0c 94 df 08 	jmp	0x11be	; 0x11be <__vector_18>
      4c:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__vector_19>
      50:	0c 94 39 09 	jmp	0x1272	; 0x1272 <__vector_20>
      54:	0c 94 66 09 	jmp	0x12cc	; 0x12cc <__vector_21>
      58:	0c 94 93 09 	jmp	0x1326	; 0x1326 <__vector_22>
      5c:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__vector_23>
      60:	ed c0       	rjmp	.+474    	; 0x23c <__bad_interrupt>
      62:	00 00       	nop
      64:	eb c0       	rjmp	.+470    	; 0x23c <__bad_interrupt>
      66:	00 00       	nop
      68:	e9 c0       	rjmp	.+466    	; 0x23c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e7 c0       	rjmp	.+462    	; 0x23c <__bad_interrupt>
      6e:	00 00       	nop
      70:	e5 c0       	rjmp	.+458    	; 0x23c <__bad_interrupt>
      72:	00 00       	nop
      74:	e3 c0       	rjmp	.+454    	; 0x23c <__bad_interrupt>
      76:	00 00       	nop
      78:	e1 c0       	rjmp	.+450    	; 0x23c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	df c0       	rjmp	.+446    	; 0x23c <__bad_interrupt>
      7e:	00 00       	nop
      80:	dd c0       	rjmp	.+442    	; 0x23c <__bad_interrupt>
      82:	00 00       	nop
      84:	db c0       	rjmp	.+438    	; 0x23c <__bad_interrupt>
      86:	00 00       	nop
      88:	d9 c0       	rjmp	.+434    	; 0x23c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d7 c0       	rjmp	.+430    	; 0x23c <__bad_interrupt>
      8e:	00 00       	nop
      90:	d5 c0       	rjmp	.+426    	; 0x23c <__bad_interrupt>
      92:	00 00       	nop
      94:	d3 c0       	rjmp	.+422    	; 0x23c <__bad_interrupt>
      96:	00 00       	nop
      98:	d1 c0       	rjmp	.+418    	; 0x23c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	cf c0       	rjmp	.+414    	; 0x23c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	cd c0       	rjmp	.+410    	; 0x23c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cb c0       	rjmp	.+406    	; 0x23c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	c9 c0       	rjmp	.+402    	; 0x23c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	c7 c0       	rjmp	.+398    	; 0x23c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	c5 c0       	rjmp	.+394    	; 0x23c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c3 c0       	rjmp	.+390    	; 0x23c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c1 c0       	rjmp	.+386    	; 0x23c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 fb 0a 	jmp	0x15f6	; 0x15f6 <__vector_47>
      c0:	0c 94 28 0b 	jmp	0x1650	; 0x1650 <__vector_48>
      c4:	0c 94 55 0b 	jmp	0x16aa	; 0x16aa <__vector_49>
      c8:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <__vector_50>
      cc:	0c 94 af 0b 	jmp	0x175e	; 0x175e <__vector_51>
      d0:	0c 94 dc 0b 	jmp	0x17b8	; 0x17b8 <__vector_52>
      d4:	b3 c0       	rjmp	.+358    	; 0x23c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	b1 c0       	rjmp	.+354    	; 0x23c <__bad_interrupt>
      da:	00 00       	nop
      dc:	af c0       	rjmp	.+350    	; 0x23c <__bad_interrupt>
      de:	00 00       	nop
      e0:	ad c0       	rjmp	.+346    	; 0x23c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	ab c0       	rjmp	.+342    	; 0x23c <__bad_interrupt>
      e6:	00 00       	nop
      e8:	a9 c0       	rjmp	.+338    	; 0x23c <__bad_interrupt>
      ea:	00 00       	nop
      ec:	a7 c0       	rjmp	.+334    	; 0x23c <__bad_interrupt>
      ee:	00 00       	nop
      f0:	a5 c0       	rjmp	.+330    	; 0x23c <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a3 c0       	rjmp	.+326    	; 0x23c <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a1 c0       	rjmp	.+322    	; 0x23c <__bad_interrupt>
      fa:	00 00       	nop
      fc:	9f c0       	rjmp	.+318    	; 0x23c <__bad_interrupt>
      fe:	00 00       	nop
     100:	9d c0       	rjmp	.+314    	; 0x23c <__bad_interrupt>
     102:	00 00       	nop
     104:	9b c0       	rjmp	.+310    	; 0x23c <__bad_interrupt>
     106:	00 00       	nop
     108:	99 c0       	rjmp	.+306    	; 0x23c <__bad_interrupt>
     10a:	00 00       	nop
     10c:	97 c0       	rjmp	.+302    	; 0x23c <__bad_interrupt>
     10e:	00 00       	nop
     110:	95 c0       	rjmp	.+298    	; 0x23c <__bad_interrupt>
     112:	00 00       	nop
     114:	93 c0       	rjmp	.+294    	; 0x23c <__bad_interrupt>
     116:	00 00       	nop
     118:	91 c0       	rjmp	.+290    	; 0x23c <__bad_interrupt>
     11a:	00 00       	nop
     11c:	8f c0       	rjmp	.+286    	; 0x23c <__bad_interrupt>
     11e:	00 00       	nop
     120:	8d c0       	rjmp	.+282    	; 0x23c <__bad_interrupt>
     122:	00 00       	nop
     124:	8b c0       	rjmp	.+278    	; 0x23c <__bad_interrupt>
     126:	00 00       	nop
     128:	89 c0       	rjmp	.+274    	; 0x23c <__bad_interrupt>
     12a:	00 00       	nop
     12c:	87 c0       	rjmp	.+270    	; 0x23c <__bad_interrupt>
     12e:	00 00       	nop
     130:	85 c0       	rjmp	.+266    	; 0x23c <__bad_interrupt>
     132:	00 00       	nop
     134:	0c 94 ed 09 	jmp	0x13da	; 0x13da <__vector_77>
     138:	0c 94 1a 0a 	jmp	0x1434	; 0x1434 <__vector_78>
     13c:	0c 94 47 0a 	jmp	0x148e	; 0x148e <__vector_79>
     140:	0c 94 74 0a 	jmp	0x14e8	; 0x14e8 <__vector_80>
     144:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_81>
     148:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__vector_82>
     14c:	77 c0       	rjmp	.+238    	; 0x23c <__bad_interrupt>
     14e:	00 00       	nop
     150:	75 c0       	rjmp	.+234    	; 0x23c <__bad_interrupt>
     152:	00 00       	nop
     154:	73 c0       	rjmp	.+230    	; 0x23c <__bad_interrupt>
     156:	00 00       	nop
     158:	71 c0       	rjmp	.+226    	; 0x23c <__bad_interrupt>
     15a:	00 00       	nop
     15c:	6f c0       	rjmp	.+222    	; 0x23c <__bad_interrupt>
     15e:	00 00       	nop
     160:	6d c0       	rjmp	.+218    	; 0x23c <__bad_interrupt>
     162:	00 00       	nop
     164:	6b c0       	rjmp	.+214    	; 0x23c <__bad_interrupt>
     166:	00 00       	nop
     168:	69 c0       	rjmp	.+210    	; 0x23c <__bad_interrupt>
     16a:	00 00       	nop
     16c:	67 c0       	rjmp	.+206    	; 0x23c <__bad_interrupt>
     16e:	00 00       	nop
     170:	65 c0       	rjmp	.+202    	; 0x23c <__bad_interrupt>
     172:	00 00       	nop
     174:	63 c0       	rjmp	.+198    	; 0x23c <__bad_interrupt>
     176:	00 00       	nop
     178:	61 c0       	rjmp	.+194    	; 0x23c <__bad_interrupt>
     17a:	00 00       	nop
     17c:	5f c0       	rjmp	.+190    	; 0x23c <__bad_interrupt>
     17e:	00 00       	nop
     180:	5d c0       	rjmp	.+186    	; 0x23c <__bad_interrupt>
     182:	00 00       	nop
     184:	5b c0       	rjmp	.+182    	; 0x23c <__bad_interrupt>
     186:	00 00       	nop
     188:	59 c0       	rjmp	.+178    	; 0x23c <__bad_interrupt>
     18a:	00 00       	nop
     18c:	57 c0       	rjmp	.+174    	; 0x23c <__bad_interrupt>
     18e:	00 00       	nop
     190:	55 c0       	rjmp	.+170    	; 0x23c <__bad_interrupt>
     192:	00 00       	nop
     194:	53 c0       	rjmp	.+166    	; 0x23c <__bad_interrupt>
     196:	00 00       	nop
     198:	51 c0       	rjmp	.+162    	; 0x23c <__bad_interrupt>
     19a:	00 00       	nop
     19c:	4f c0       	rjmp	.+158    	; 0x23c <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	4d c0       	rjmp	.+154    	; 0x23c <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	4b c0       	rjmp	.+150    	; 0x23c <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	49 c0       	rjmp	.+146    	; 0x23c <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	47 c0       	rjmp	.+142    	; 0x23c <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0c 94 09 0c 	jmp	0x1812	; 0x1812 <__vector_108>
     1b4:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__vector_109>
     1b8:	0c 94 63 0c 	jmp	0x18c6	; 0x18c6 <__vector_110>
     1bc:	0c 94 90 0c 	jmp	0x1920	; 0x1920 <__vector_111>
     1c0:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__vector_112>
     1c4:	0c 94 ea 0c 	jmp	0x19d4	; 0x19d4 <__vector_113>
     1c8:	39 c0       	rjmp	.+114    	; 0x23c <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	37 c0       	rjmp	.+110    	; 0x23c <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	35 c0       	rjmp	.+106    	; 0x23c <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	33 c0       	rjmp	.+102    	; 0x23c <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	31 c0       	rjmp	.+98     	; 0x23c <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	2f c0       	rjmp	.+94     	; 0x23c <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	2d c0       	rjmp	.+90     	; 0x23c <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	2b c0       	rjmp	.+86     	; 0x23c <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	29 c0       	rjmp	.+82     	; 0x23c <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	27 c0       	rjmp	.+78     	; 0x23c <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	25 c0       	rjmp	.+74     	; 0x23c <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	23 c0       	rjmp	.+70     	; 0x23c <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	21 c0       	rjmp	.+66     	; 0x23c <__bad_interrupt>
	...

000001fc <__ctors_end>:
     1fc:	11 24       	eor	r1, r1
     1fe:	1f be       	out	0x3f, r1	; 63
     200:	cf ef       	ldi	r28, 0xFF	; 255
     202:	cd bf       	out	0x3d, r28	; 61
     204:	df e9       	ldi	r29, 0x9F	; 159
     206:	de bf       	out	0x3e, r29	; 62
     208:	00 e0       	ldi	r16, 0x00	; 0
     20a:	0c bf       	out	0x3c, r16	; 60

0000020c <__do_copy_data>:
     20c:	10 e2       	ldi	r17, 0x20	; 32
     20e:	a0 e0       	ldi	r26, 0x00	; 0
     210:	b0 e2       	ldi	r27, 0x20	; 32
     212:	ea e5       	ldi	r30, 0x5A	; 90
     214:	fc e1       	ldi	r31, 0x1C	; 28
     216:	00 e0       	ldi	r16, 0x00	; 0
     218:	0b bf       	out	0x3b, r16	; 59
     21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
     21c:	07 90       	elpm	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	a4 30       	cpi	r26, 0x04	; 4
     222:	b1 07       	cpc	r27, r17
     224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>

00000226 <__do_clear_bss>:
     226:	20 e2       	ldi	r18, 0x20	; 32
     228:	a4 e0       	ldi	r26, 0x04	; 4
     22a:	b0 e2       	ldi	r27, 0x20	; 32
     22c:	01 c0       	rjmp	.+2      	; 0x230 <.do_clear_bss_start>

0000022e <.do_clear_bss_loop>:
     22e:	1d 92       	st	X+, r1

00000230 <.do_clear_bss_start>:
     230:	a2 3c       	cpi	r26, 0xC2	; 194
     232:	b2 07       	cpc	r27, r18
     234:	e1 f7       	brne	.-8      	; 0x22e <.do_clear_bss_loop>
     236:	6e d6       	rcall	.+3292   	; 0xf14 <main>
     238:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <_exit>

0000023c <__bad_interrupt>:
     23c:	e1 ce       	rjmp	.-574    	; 0x0 <__vectors>

0000023e <_1101010101_>:

#if ((_STATIC_PORT_PIN_CONF_ == 1) && (QTOUCH_SNS_PORT_COUNT >= 1))

GLOBAL_FUNCTION _1101010101_
_1101010101_:
    sts	CONCAT( PORT, SNS1, _DIRCLR ), p_1
     23e:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    sts	CONCAT( PORT, SNSK1, _DIRCLR ), p_2
     242:	60 93 02 06 	sts	0x0602, r22	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    sts	CONCAT( PORT, SNS1, _OUTSET), p_1
     246:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    sts	CONCAT( PORT, SNSK1, _OUTCLR), p_2    
     24a:	60 93 06 06 	sts	0x0606, r22	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
    sts	CONCAT( PORT, SNSK1, _DIRSET), p_2   
     24e:	60 93 01 06 	sts	0x0601, r22	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    ret
     252:	08 95       	ret

00000254 <_1101010111_>:


GLOBAL_FUNCTION _1101010111_
_1101010111_:
    push r19
     254:	3f 93       	push	r19
    sts	CONCAT( PORT, SNSK1, _DIRCLR), p_2
     256:	60 93 02 06 	sts	0x0602, r22	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    sts	CONCAT( PORT, SNS1, _DIRSET), p_1
     25a:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    _00011001_
#elif (QT_DELAY_CYCLES == 3)
    _00011001_
    _00011001_
#elif ((QT_DELAY_CYCLES - 1) - (3 * ((QT_DELAY_CYCLES - 1)/3)) == 0)
    _11100011_
     25e:	33 e0       	ldi	r19, 0x03	; 3

00000260 <_111_>:
    _10100011_
     260:	3a 95       	dec	r19
    _01101001_
     262:	f1 f7       	brne	.-4      	; 0x260 <_111_>
    _10100011_
    _01101001_
    _00011001_
    _00011001_
#endif
    sts	CONCAT( PORT, SNS1, _DIRCLR ), p_1
     264:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    sts	CONCAT( PORT, SNSK1, _DIRSET ), p_2 
     268:	60 93 01 06 	sts	0x0601, r22	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    pop  r19
     26c:	3f 91       	pop	r19
    lds	r_v, CONCAT(PORT, SNS1, _IN )
     26e:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    and	r_v, p_3
     272:	84 23       	and	r24, r20
    ret
     274:	08 95       	ret

00000276 <_1101010110_>:

GLOBAL_FUNCTION _1101010110_
_1101010110_:
    sts	CONCAT( PORT, SNS1, _OUTCLR), p_1
     276:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x700606>
    sts	CONCAT( PORT, SNS1, _DIRSET), p_1
     27a:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    ret
     27e:	08 95       	ret

00000280 <_1101011111_>:

#if ((_STATIC_PORT_PIN_CONF_ == 1) && (QTOUCH_SNS_PORT_COUNT == 2))

GLOBAL_FUNCTION _1101011111_
_1101011111_:
    sts	CONCAT( PORT, SNS2, _DIRCLR ), p_1
     280:	80 93 22 06 	sts	0x0622, r24	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    sts	CONCAT( PORT, SNSK2, _DIRCLR ), p_2
     284:	60 93 22 06 	sts	0x0622, r22	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    sts	CONCAT( PORT, SNS2, _OUTSET), p_1
     288:	80 93 25 06 	sts	0x0625, r24	; 0x800625 <__TEXT_REGION_LENGTH__+0x700625>
    sts	CONCAT( PORT, SNSK2, _OUTCLR), p_2    
     28c:	60 93 26 06 	sts	0x0626, r22	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    sts	CONCAT( PORT, SNSK2, _DIRSET), p_2   
     290:	60 93 21 06 	sts	0x0621, r22	; 0x800621 <__TEXT_REGION_LENGTH__+0x700621>
    ret
     294:	08 95       	ret

00000296 <_1101011110_>:

GLOBAL_FUNCTION _1101011110_
_1101011110_:
    push r19
     296:	3f 93       	push	r19
    sts	CONCAT( PORT, SNSK2, _DIRCLR), p_2
     298:	60 93 22 06 	sts	0x0622, r22	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    sts	CONCAT( PORT, SNS2, _DIRSET), p_1
     29c:	80 93 21 06 	sts	0x0621, r24	; 0x800621 <__TEXT_REGION_LENGTH__+0x700621>
    _00011001_
#elif (QT_DELAY_CYCLES == 2)
    _00011001_
    _00011001_
#elif ((QT_DELAY_CYCLES - 1) - (3 * ((QT_DELAY_CYCLES - 1)/3)) == 0)
    _11100011_
     2a0:	33 e0       	ldi	r19, 0x03	; 3

000002a2 <_222_>:
    _10100111_
     2a2:	3a 95       	dec	r19
    _01101011_
     2a4:	f1 f7       	brne	.-4      	; 0x2a2 <_222_>
    _10100111_
    _01101011_
    _00011001_
    _00011001_
#endif
    sts	CONCAT( PORT, SNS2, _DIRCLR ), p_1
     2a6:	80 93 22 06 	sts	0x0622, r24	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    sts	CONCAT( PORT, SNSK2, _DIRSET ), p_2 
     2aa:	60 93 21 06 	sts	0x0621, r22	; 0x800621 <__TEXT_REGION_LENGTH__+0x700621>
    pop  r19
     2ae:	3f 91       	pop	r19
    lds	r_v, CONCAT(PORT, SNS2, _IN )
     2b0:	80 91 28 06 	lds	r24, 0x0628	; 0x800628 <__TEXT_REGION_LENGTH__+0x700628>
    and	r_v, p_3
     2b4:	84 23       	and	r24, r20
    ret
     2b6:	08 95       	ret

000002b8 <_1101011010_>:

GLOBAL_FUNCTION _1101011010_
_1101011010_:
    sts	CONCAT( PORT, SNS2, _OUTCLR), p_1
     2b8:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    sts	CONCAT( PORT, SNS2, _DIRSET), p_1
     2bc:	80 93 21 06 	sts	0x0621, r24	; 0x800621 <__TEXT_REGION_LENGTH__+0x700621>
    ret
     2c0:	08 95       	ret

000002c2 <burst_1_2_11_0_1>:
     2c2:	a4 e1       	ldi	r26, 0x14	; 20
     2c4:	b0 e0       	ldi	r27, 0x00	; 0
     2c6:	e7 e6       	ldi	r30, 0x67	; 103
     2c8:	f1 e0       	ldi	r31, 0x01	; 1
     2ca:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <__prologue_saves__>
     2ce:	0f b7       	in	r16, 0x3f	; 63
     2d0:	00 78       	andi	r16, 0x80	; 128
     2d2:	19 82       	std	Y+1, r1	; 0x01
     2d4:	90 91 04 20 	lds	r25, 0x2004	; 0x802004 <__data_end>
     2d8:	91 30       	cpi	r25, 0x01	; 1
     2da:	19 f0       	breq	.+6      	; 0x2e2 <burst_1_2_11_0_1+0x20>
     2dc:	91 e0       	ldi	r25, 0x01	; 1
     2de:	90 93 04 20 	sts	0x2004, r25	; 0x802004 <__data_end>
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	9c 01       	movw	r18, r24
     2e6:	29 58       	subi	r18, 0x89	; 137
     2e8:	3f 4d       	sbci	r19, 0xDF	; 223
     2ea:	2e 87       	std	Y+14, r18	; 0x0e
     2ec:	3f 87       	std	Y+15, r19	; 0x0f
     2ee:	f9 01       	movw	r30, r18
     2f0:	20 81       	ld	r18, Z
     2f2:	2a 87       	std	Y+10, r18	; 0x0a
     2f4:	fc 01       	movw	r30, r24
     2f6:	ed 58       	subi	r30, 0x8D	; 141
     2f8:	ff 4d       	sbci	r31, 0xDF	; 223
     2fa:	20 81       	ld	r18, Z
     2fc:	28 87       	std	Y+8, r18	; 0x08
     2fe:	20 91 78 20 	lds	r18, 0x2078	; 0x802078 <SNS_array+0x1>
     302:	30 91 77 20 	lds	r19, 0x2077	; 0x802077 <SNS_array>
     306:	23 2b       	or	r18, r19
     308:	2e 83       	std	Y+6, r18	; 0x06
     30a:	1c 82       	std	Y+4, r1	; 0x04
     30c:	9c 01       	movw	r18, r24
     30e:	27 58       	subi	r18, 0x87	; 135
     310:	3f 4d       	sbci	r19, 0xDF	; 223
     312:	28 8b       	std	Y+16, r18	; 0x10
     314:	39 8b       	std	Y+17, r19	; 0x11
     316:	f9 01       	movw	r30, r18
     318:	20 81       	ld	r18, Z
     31a:	2b 87       	std	Y+11, r18	; 0x0b
     31c:	8b 58       	subi	r24, 0x8B	; 139
     31e:	9f 4d       	sbci	r25, 0xDF	; 223
     320:	fc 01       	movw	r30, r24
     322:	80 81       	ld	r24, Z
     324:	89 87       	std	Y+9, r24	; 0x09
     326:	80 91 7a 20 	lds	r24, 0x207A	; 0x80207a <SNS_array+0x3>
     32a:	90 91 79 20 	lds	r25, 0x2079	; 0x802079 <SNS_array+0x2>
     32e:	89 2b       	or	r24, r25
     330:	8f 83       	std	Y+7, r24	; 0x07
     332:	1d 82       	std	Y+5, r1	; 0x05
     334:	f8 94       	cli
     336:	aa 84       	ldd	r10, Y+10	; 0x0a
     338:	aa 20       	and	r10, r10
     33a:	09 f4       	brne	.+2      	; 0x33e <burst_1_2_11_0_1+0x7c>
     33c:	67 c1       	rjmp	.+718    	; 0x60c <__FUSE_REGION_LENGTH__+0x20c>
     33e:	18 85       	ldd	r17, Y+8	; 0x08
     340:	ee 85       	ldd	r30, Y+14	; 0x0e
     342:	ff 85       	ldd	r31, Y+15	; 0x0f
     344:	80 81       	ld	r24, Z
     346:	97 df       	rcall	.-210    	; 0x276 <_1101010110_>
     348:	8a 2d       	mov	r24, r10
     34a:	61 2f       	mov	r22, r17
     34c:	78 df       	rcall	.-272    	; 0x23e <_1101010101_>
     34e:	cc 24       	eor	r12, r12
     350:	dd 24       	eor	r13, r13
     352:	d5 fc       	sbrc	r13, 5
     354:	48 c0       	rjmp	.+144    	; 0x3e6 <burst_1_2_11_0_1+0x124>
     356:	8f b7       	in	r24, 0x3f	; 63
     358:	80 2b       	or	r24, r16
     35a:	8f bf       	out	0x3f, r24	; 63
     35c:	00 00       	nop
     35e:	f8 94       	cli
     360:	8a 2d       	mov	r24, r10
     362:	61 2f       	mov	r22, r17
     364:	4a 85       	ldd	r20, Y+10	; 0x0a
     366:	76 df       	rcall	.-276    	; 0x254 <_1101010111_>
     368:	8c 83       	std	Y+4, r24	; 0x04
     36a:	08 94       	sec
     36c:	c1 1c       	adc	r12, r1
     36e:	d1 1c       	adc	r13, r1
     370:	90 91 00 20 	lds	r25, 0x2000	; 0x802000 <__data_start>
     374:	9f 5f       	subi	r25, 0xFF	; 255
     376:	90 93 00 20 	sts	0x2000, r25	; 0x802000 <__data_start>
     37a:	92 30       	cpi	r25, 0x02	; 2
     37c:	30 f0       	brcs	.+12     	; 0x38a <burst_1_2_11_0_1+0xc8>
     37e:	92 30       	cpi	r25, 0x02	; 2
     380:	21 f0       	breq	.+8      	; 0x38a <burst_1_2_11_0_1+0xc8>
     382:	93 30       	cpi	r25, 0x03	; 3
     384:	11 f0       	breq	.+4      	; 0x38a <burst_1_2_11_0_1+0xc8>
     386:	10 92 00 20 	sts	0x2000, r1	; 0x802000 <__data_start>
     38a:	88 23       	and	r24, r24
     38c:	11 f3       	breq	.-60     	; 0x352 <burst_1_2_11_0_1+0x90>
     38e:	80 91 78 20 	lds	r24, 0x2078	; 0x802078 <SNS_array+0x1>
     392:	90 91 77 20 	lds	r25, 0x2077	; 0x802077 <SNS_array>
     396:	89 2b       	or	r24, r25
     398:	8e 83       	std	Y+6, r24	; 0x06
     39a:	68 c0       	rjmp	.+208    	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
     39c:	d5 fc       	sbrc	r13, 5
     39e:	23 c0       	rjmp	.+70     	; 0x3e6 <burst_1_2_11_0_1+0x124>
     3a0:	8f b7       	in	r24, 0x3f	; 63
     3a2:	80 2b       	or	r24, r16
     3a4:	8f bf       	out	0x3f, r24	; 63
     3a6:	00 00       	nop
     3a8:	f8 94       	cli
     3aa:	8a 2d       	mov	r24, r10
     3ac:	61 2f       	mov	r22, r17
     3ae:	4b 85       	ldd	r20, Y+11	; 0x0b
     3b0:	72 df       	rcall	.-284    	; 0x296 <_1101011110_>
     3b2:	8d 83       	std	Y+5, r24	; 0x05
     3b4:	08 94       	sec
     3b6:	c1 1c       	adc	r12, r1
     3b8:	d1 1c       	adc	r13, r1
     3ba:	90 91 00 20 	lds	r25, 0x2000	; 0x802000 <__data_start>
     3be:	9f 5f       	subi	r25, 0xFF	; 255
     3c0:	90 93 00 20 	sts	0x2000, r25	; 0x802000 <__data_start>
     3c4:	92 30       	cpi	r25, 0x02	; 2
     3c6:	30 f0       	brcs	.+12     	; 0x3d4 <burst_1_2_11_0_1+0x112>
     3c8:	92 30       	cpi	r25, 0x02	; 2
     3ca:	21 f0       	breq	.+8      	; 0x3d4 <burst_1_2_11_0_1+0x112>
     3cc:	93 30       	cpi	r25, 0x03	; 3
     3ce:	11 f0       	breq	.+4      	; 0x3d4 <burst_1_2_11_0_1+0x112>
     3d0:	10 92 00 20 	sts	0x2000, r1	; 0x802000 <__data_start>
     3d4:	88 23       	and	r24, r24
     3d6:	11 f3       	breq	.-60     	; 0x39c <burst_1_2_11_0_1+0xda>
     3d8:	80 91 7a 20 	lds	r24, 0x207A	; 0x80207a <SNS_array+0x3>
     3dc:	90 91 79 20 	lds	r25, 0x2079	; 0x802079 <SNS_array+0x2>
     3e0:	89 2b       	or	r24, r25
     3e2:	8f 83       	std	Y+7, r24	; 0x07
     3e4:	43 c0       	rjmp	.+134    	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
     3e6:	68 e7       	ldi	r22, 0x78	; 120
     3e8:	70 e2       	ldi	r23, 0x20	; 32
     3ea:	de 01       	movw	r26, r28
     3ec:	16 96       	adiw	r26, 0x06	; 6
     3ee:	8a e0       	ldi	r24, 0x0A	; 10
     3f0:	e8 2e       	mov	r14, r24
     3f2:	f1 2c       	mov	r15, r1
     3f4:	ec 0e       	add	r14, r28
     3f6:	fd 1e       	adc	r15, r29
     3f8:	9e 01       	movw	r18, r28
     3fa:	2e 5f       	subi	r18, 0xFE	; 254
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
     3fe:	92 e0       	ldi	r25, 0x02	; 2
     400:	80 e0       	ldi	r24, 0x00	; 0
     402:	81 2c       	mov	r8, r1
     404:	40 e2       	ldi	r20, 0x20	; 32
     406:	94 2e       	mov	r9, r20
     408:	fb 01       	movw	r30, r22
     40a:	31 97       	sbiw	r30, 0x01	; 1
     40c:	40 81       	ld	r20, Z
     40e:	fb 01       	movw	r30, r22
     410:	50 81       	ld	r21, Z
     412:	45 2b       	or	r20, r21
     414:	4c 93       	st	X, r20
     416:	f7 01       	movw	r30, r14
     418:	51 91       	ld	r21, Z+
     41a:	7f 01       	movw	r14, r30
     41c:	f9 01       	movw	r30, r18
     41e:	50 83       	st	Z, r21
     420:	44 23       	and	r20, r20
     422:	c1 f0       	breq	.+48     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
     424:	14 c0       	rjmp	.+40     	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
     426:	f9 01       	movw	r30, r18
     428:	50 81       	ld	r21, Z
     42a:	50 ff       	sbrs	r21, 0
     42c:	09 c0       	rjmp	.+18     	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
     42e:	e8 2f       	mov	r30, r24
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	ee 0f       	add	r30, r30
     434:	ff 1f       	adc	r31, r31
     436:	e3 5f       	subi	r30, 0xF3	; 243
     438:	ff 4d       	sbci	r31, 0xDF	; 223
     43a:	80 82       	st	Z, r8
     43c:	91 82       	std	Z+1, r9	; 0x01
     43e:	01 c0       	rjmp	.+2      	; 0x442 <__FUSE_REGION_LENGTH__+0x42>
     440:	40 fd       	sbrc	r20, 0
     442:	8f 5f       	subi	r24, 0xFF	; 255
     444:	46 95       	lsr	r20
     446:	4c 93       	st	X, r20
     448:	56 95       	lsr	r21
     44a:	f9 01       	movw	r30, r18
     44c:	50 83       	st	Z, r21
     44e:	4c 91       	ld	r20, X
     450:	44 23       	and	r20, r20
     452:	49 f7       	brne	.-46     	; 0x426 <__FUSE_REGION_LENGTH__+0x26>
     454:	91 50       	subi	r25, 0x01	; 1
     456:	6e 5f       	subi	r22, 0xFE	; 254
     458:	7f 4f       	sbci	r23, 0xFF	; 255
     45a:	11 96       	adiw	r26, 0x01	; 1
     45c:	2f 5f       	subi	r18, 0xFF	; 255
     45e:	3f 4f       	sbci	r19, 0xFF	; 255
     460:	99 23       	and	r25, r25
     462:	91 f6       	brne	.-92     	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
     464:	1a 86       	std	Y+10, r1	; 0x0a
     466:	18 86       	std	Y+8, r1	; 0x08
     468:	1b 86       	std	Y+11, r1	; 0x0b
     46a:	19 86       	std	Y+9, r1	; 0x09
     46c:	8f b7       	in	r24, 0x3f	; 63
     46e:	80 2b       	or	r24, r16
     470:	8f bf       	out	0x3f, r24	; 63
     472:	10 92 05 20 	sts	0x2005, r1	; 0x802005 <m.3423>
     476:	de 01       	movw	r26, r28
     478:	16 96       	adiw	r26, 0x06	; 6
     47a:	9a e0       	ldi	r25, 0x0A	; 10
     47c:	89 2e       	mov	r8, r25
     47e:	91 2c       	mov	r9, r1
     480:	8c 0e       	add	r8, r28
     482:	9d 1e       	adc	r9, r29
     484:	24 e0       	ldi	r18, 0x04	; 4
     486:	62 2e       	mov	r6, r18
     488:	71 2c       	mov	r7, r1
     48a:	6c 0e       	add	r6, r28
     48c:	7d 1e       	adc	r7, r29
     48e:	38 e7       	ldi	r19, 0x78	; 120
     490:	43 2e       	mov	r4, r19
     492:	30 e2       	ldi	r19, 0x20	; 32
     494:	53 2e       	mov	r5, r19
     496:	42 e0       	ldi	r20, 0x02	; 2
     498:	e4 2e       	mov	r14, r20
     49a:	f1 2c       	mov	r15, r1
     49c:	ec 0e       	add	r14, r28
     49e:	fd 1e       	adc	r15, r29
     4a0:	54 e7       	ldi	r21, 0x74	; 116
     4a2:	25 2e       	mov	r2, r21
     4a4:	50 e2       	ldi	r21, 0x20	; 32
     4a6:	35 2e       	mov	r3, r21
     4a8:	9e 01       	movw	r18, r28
     4aa:	28 5f       	subi	r18, 0xF8	; 248
     4ac:	3f 4f       	sbci	r19, 0xFF	; 255
     4ae:	2c 87       	std	Y+12, r18	; 0x0c
     4b0:	3d 87       	std	Y+13, r19	; 0x0d
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	1c 8a       	std	Y+20, r1	; 0x14
     4b6:	70 e0       	ldi	r23, 0x00	; 0
     4b8:	bb 24       	eor	r11, r11
     4ba:	40 e0       	ldi	r20, 0x00	; 0
     4bc:	ca 8a       	std	Y+18, r12	; 0x12
     4be:	db 8a       	std	Y+19, r13	; 0x13
     4c0:	c0 2e       	mov	r12, r16
     4c2:	c1 01       	movw	r24, r2
     4c4:	2a 2c       	mov	r2, r10
     4c6:	a1 2e       	mov	r10, r17
     4c8:	8c 01       	movw	r16, r24
     4ca:	8c 91       	ld	r24, X
     4cc:	88 23       	and	r24, r24
     4ce:	09 f4       	brne	.+2      	; 0x4d2 <__FUSE_REGION_LENGTH__+0xd2>
     4d0:	67 c0       	rjmp	.+206    	; 0x5a0 <__FUSE_REGION_LENGTH__+0x1a0>
     4d2:	f4 01       	movw	r30, r8
     4d4:	80 81       	ld	r24, Z
     4d6:	88 23       	and	r24, r24
     4d8:	09 f4       	brne	.+2      	; 0x4dc <__FUSE_REGION_LENGTH__+0xdc>
     4da:	62 c0       	rjmp	.+196    	; 0x5a0 <__FUSE_REGION_LENGTH__+0x1a0>
     4dc:	f3 01       	movw	r30, r6
     4de:	80 81       	ld	r24, Z
     4e0:	f7 01       	movw	r30, r14
     4e2:	80 83       	st	Z, r24
     4e4:	f8 01       	movw	r30, r16
     4e6:	31 97       	sbiw	r30, 0x01	; 1
     4e8:	20 81       	ld	r18, Z
     4ea:	f8 01       	movw	r30, r16
     4ec:	80 81       	ld	r24, Z
     4ee:	28 2b       	or	r18, r24
     4f0:	60 e0       	ldi	r22, 0x00	; 0
     4f2:	36 c0       	rjmp	.+108    	; 0x560 <__FUSE_REGION_LENGTH__+0x160>
     4f4:	50 ff       	sbrs	r21, 0
     4f6:	29 c0       	rjmp	.+82     	; 0x54a <__FUSE_REGION_LENGTH__+0x14a>
     4f8:	22 c0       	rjmp	.+68     	; 0x53e <__FUSE_REGION_LENGTH__+0x13e>
     4fa:	20 ff       	sbrs	r18, 0
     4fc:	1e c0       	rjmp	.+60     	; 0x53a <__FUSE_REGION_LENGTH__+0x13a>
     4fe:	47 17       	cp	r20, r23
     500:	d9 f4       	brne	.+54     	; 0x538 <__FUSE_REGION_LENGTH__+0x138>
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	06 2e       	mov	r0, r22
     508:	02 c0       	rjmp	.+4      	; 0x50e <__FUSE_REGION_LENGTH__+0x10e>
     50a:	88 0f       	add	r24, r24
     50c:	99 1f       	adc	r25, r25
     50e:	0a 94       	dec	r0
     510:	e2 f7       	brpl	.-8      	; 0x50a <__FUSE_REGION_LENGTH__+0x10a>
     512:	80 95       	com	r24
     514:	ec 85       	ldd	r30, Y+12	; 0x0c
     516:	fd 85       	ldd	r31, Y+13	; 0x0d
     518:	90 81       	ld	r25, Z
     51a:	98 23       	and	r25, r24
     51c:	90 83       	st	Z, r25
     51e:	e3 2f       	mov	r30, r19
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	ee 0f       	add	r30, r30
     524:	ff 1f       	adc	r31, r31
     526:	e3 5f       	subi	r30, 0xF3	; 243
     528:	ff 4d       	sbci	r31, 0xDF	; 223
     52a:	8a 89       	ldd	r24, Y+18	; 0x12
     52c:	9b 89       	ldd	r25, Y+19	; 0x13
     52e:	80 83       	st	Z, r24
     530:	91 83       	std	Z+1, r25	; 0x01
     532:	5e 7f       	andi	r21, 0xFE	; 254
     534:	39 f0       	breq	.+14     	; 0x544 <__FUSE_REGION_LENGTH__+0x144>
     536:	0a c0       	rjmp	.+20     	; 0x54c <__FUSE_REGION_LENGTH__+0x14c>
     538:	7f 5f       	subi	r23, 0xFF	; 255
     53a:	26 95       	lsr	r18
     53c:	6f 5f       	subi	r22, 0xFF	; 255
     53e:	22 23       	and	r18, r18
     540:	e1 f6       	brne	.-72     	; 0x4fa <__FUSE_REGION_LENGTH__+0xfa>
     542:	04 c0       	rjmp	.+8      	; 0x54c <__FUSE_REGION_LENGTH__+0x14c>
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	9c 8b       	std	Y+20, r25	; 0x14
     548:	01 c0       	rjmp	.+2      	; 0x54c <__FUSE_REGION_LENGTH__+0x14c>
     54a:	80 fd       	sbrc	r24, 0
     54c:	4f 5f       	subi	r20, 0xFF	; 255
     54e:	9c 91       	ld	r25, X
     550:	90 fd       	sbrc	r25, 0
     552:	3f 5f       	subi	r19, 0xFF	; 255
     554:	f7 01       	movw	r30, r14
     556:	80 81       	ld	r24, Z
     558:	86 95       	lsr	r24
     55a:	80 83       	st	Z, r24
     55c:	96 95       	lsr	r25
     55e:	9c 93       	st	X, r25
     560:	8c 91       	ld	r24, X
     562:	88 23       	and	r24, r24
     564:	29 f0       	breq	.+10     	; 0x570 <__FUSE_REGION_LENGTH__+0x170>
     566:	f7 01       	movw	r30, r14
     568:	50 81       	ld	r21, Z
     56a:	55 23       	and	r21, r21
     56c:	09 f0       	breq	.+2      	; 0x570 <__FUSE_REGION_LENGTH__+0x170>
     56e:	c2 cf       	rjmp	.-124    	; 0x4f4 <__FUSE_REGION_LENGTH__+0xf4>
     570:	f4 01       	movw	r30, r8
     572:	90 81       	ld	r25, Z
     574:	f3 01       	movw	r30, r6
     576:	80 81       	ld	r24, Z
     578:	80 95       	com	r24
     57a:	89 23       	and	r24, r25
     57c:	f4 01       	movw	r30, r8
     57e:	80 83       	st	Z, r24
     580:	f3 01       	movw	r30, r6
     582:	10 82       	st	Z, r1
     584:	1c 92       	st	X, r1
     586:	fc 89       	ldd	r31, Y+20	; 0x14
     588:	f1 30       	cpi	r31, 0x01	; 1
     58a:	d1 f4       	brne	.+52     	; 0x5c0 <__FUSE_REGION_LENGTH__+0x1c0>
     58c:	1a 2d       	mov	r17, r10
     58e:	a2 2c       	mov	r10, r2
     590:	0c 2d       	mov	r16, r12
     592:	ca 88       	ldd	r12, Y+18	; 0x12
     594:	db 88       	ldd	r13, Y+19	; 0x13
     596:	30 93 05 20 	sts	0x2005, r19	; 0x802005 <m.3423>
     59a:	88 23       	and	r24, r24
     59c:	99 f1       	breq	.+102    	; 0x604 <__FUSE_REGION_LENGTH__+0x204>
     59e:	34 c0       	rjmp	.+104    	; 0x608 <__FUSE_REGION_LENGTH__+0x208>
     5a0:	f2 01       	movw	r30, r4
     5a2:	31 97       	sbiw	r30, 0x01	; 1
     5a4:	80 81       	ld	r24, Z
     5a6:	f2 01       	movw	r30, r4
     5a8:	90 81       	ld	r25, Z
     5aa:	89 2b       	or	r24, r25
     5ac:	05 c0       	rjmp	.+10     	; 0x5b8 <__FUSE_REGION_LENGTH__+0x1b8>
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	80 fd       	sbrc	r24, 0
     5b2:	3f 5f       	subi	r19, 0xFF	; 255
     5b4:	89 81       	ldd	r24, Y+1	; 0x01
     5b6:	86 95       	lsr	r24
     5b8:	89 83       	std	Y+1, r24	; 0x01
     5ba:	89 81       	ldd	r24, Y+1	; 0x01
     5bc:	88 23       	and	r24, r24
     5be:	b9 f7       	brne	.-18     	; 0x5ae <__FUSE_REGION_LENGTH__+0x1ae>
     5c0:	b3 94       	inc	r11
     5c2:	11 96       	adiw	r26, 0x01	; 1
     5c4:	08 94       	sec
     5c6:	81 1c       	adc	r8, r1
     5c8:	91 1c       	adc	r9, r1
     5ca:	08 94       	sec
     5cc:	61 1c       	adc	r6, r1
     5ce:	71 1c       	adc	r7, r1
     5d0:	82 e0       	ldi	r24, 0x02	; 2
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	48 0e       	add	r4, r24
     5d6:	59 1e       	adc	r5, r25
     5d8:	08 94       	sec
     5da:	e1 1c       	adc	r14, r1
     5dc:	f1 1c       	adc	r15, r1
     5de:	0e 5f       	subi	r16, 0xFE	; 254
     5e0:	1f 4f       	sbci	r17, 0xFF	; 255
     5e2:	ec 85       	ldd	r30, Y+12	; 0x0c
     5e4:	fd 85       	ldd	r31, Y+13	; 0x0d
     5e6:	31 96       	adiw	r30, 0x01	; 1
     5e8:	ec 87       	std	Y+12, r30	; 0x0c
     5ea:	fd 87       	std	Y+13, r31	; 0x0d
     5ec:	f2 e0       	ldi	r31, 0x02	; 2
     5ee:	bf 16       	cp	r11, r31
     5f0:	09 f0       	breq	.+2      	; 0x5f4 <__FUSE_REGION_LENGTH__+0x1f4>
     5f2:	6b cf       	rjmp	.-298    	; 0x4ca <__FUSE_REGION_LENGTH__+0xca>
     5f4:	1a 2d       	mov	r17, r10
     5f6:	a2 2c       	mov	r10, r2
     5f8:	0c 2d       	mov	r16, r12
     5fa:	ca 88       	ldd	r12, Y+18	; 0x12
     5fc:	db 88       	ldd	r13, Y+19	; 0x13
     5fe:	30 93 05 20 	sts	0x2005, r19	; 0x802005 <m.3423>
     602:	02 c0       	rjmp	.+4      	; 0x608 <__FUSE_REGION_LENGTH__+0x208>
     604:	cc 24       	eor	r12, r12
     606:	dd 24       	eor	r13, r13
     608:	f8 94       	cli
     60a:	03 c0       	rjmp	.+6      	; 0x612 <__FUSE_REGION_LENGTH__+0x212>
     60c:	10 e0       	ldi	r17, 0x00	; 0
     60e:	cc 24       	eor	r12, r12
     610:	dd 24       	eor	r13, r13
     612:	8a 85       	ldd	r24, Y+10	; 0x0a
     614:	88 23       	and	r24, r24
     616:	09 f0       	breq	.+2      	; 0x61a <__FUSE_REGION_LENGTH__+0x21a>
     618:	9c ce       	rjmp	.-712    	; 0x352 <burst_1_2_11_0_1+0x90>
     61a:	eb 84       	ldd	r14, Y+11	; 0x0b
     61c:	ee 20       	and	r14, r14
     61e:	91 f0       	breq	.+36     	; 0x644 <__FUSE_REGION_LENGTH__+0x244>
     620:	ee 85       	ldd	r30, Y+14	; 0x0e
     622:	ff 85       	ldd	r31, Y+15	; 0x0f
     624:	80 81       	ld	r24, Z
     626:	27 de       	rcall	.-946    	; 0x276 <_1101010110_>
     628:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <temp_flag>
     62c:	88 23       	and	r24, r24
     62e:	09 f0       	breq	.+2      	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
     630:	b5 ce       	rjmp	.-662    	; 0x39c <burst_1_2_11_0_1+0xda>
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <temp_flag>
     638:	19 85       	ldd	r17, Y+9	; 0x09
     63a:	8e 2d       	mov	r24, r14
     63c:	61 2f       	mov	r22, r17
     63e:	20 de       	rcall	.-960    	; 0x280 <_1101011111_>
     640:	ae 2c       	mov	r10, r14
     642:	ac ce       	rjmp	.-680    	; 0x39c <burst_1_2_11_0_1+0xda>
     644:	e8 89       	ldd	r30, Y+16	; 0x10
     646:	f9 89       	ldd	r31, Y+17	; 0x11
     648:	80 81       	ld	r24, Z
     64a:	36 de       	rcall	.-916    	; 0x2b8 <_1101011010_>
     64c:	ee 85       	ldd	r30, Y+14	; 0x0e
     64e:	ff 85       	ldd	r31, Y+15	; 0x0f
     650:	80 81       	ld	r24, Z
     652:	11 de       	rcall	.-990    	; 0x276 <_1101010110_>
     654:	e8 89       	ldd	r30, Y+16	; 0x10
     656:	f9 89       	ldd	r31, Y+17	; 0x11
     658:	80 81       	ld	r24, Z
     65a:	2e de       	rcall	.-932    	; 0x2b8 <_1101011010_>
     65c:	10 92 06 20 	sts	0x2006, r1	; 0x802006 <temp_flag>
     660:	8f b7       	in	r24, 0x3f	; 63
     662:	80 2b       	or	r24, r16
     664:	8f bf       	out	0x3f, r24	; 63
     666:	64 96       	adiw	r28, 0x14	; 20
     668:	e2 e1       	ldi	r30, 0x12	; 18
     66a:	0c 94 13 0e 	jmp	0x1c26	; 0x1c26 <__epilogue_restores__>

0000066e <qt_init_sensing_with_burst>:
     66e:	ff 92       	push	r15
     670:	0f 93       	push	r16
     672:	1f 93       	push	r17
     674:	cf 93       	push	r28
     676:	df 93       	push	r29
     678:	8c 01       	movw	r16, r24
     67a:	eb 01       	movw	r28, r22
     67c:	ff 24       	eor	r15, r15
     67e:	03 c0       	rjmp	.+6      	; 0x686 <qt_init_sensing_with_burst+0x18>
     680:	8f 2d       	mov	r24, r15
     682:	49 d1       	rcall	.+658    	; 0x916 <start_cal_sensor>
     684:	f3 94       	inc	r15
     686:	80 91 3a 20 	lds	r24, 0x203A	; 0x80203a <num_sensors>
     68a:	f8 16       	cp	r15, r24
     68c:	c8 f3       	brcs	.-14     	; 0x680 <qt_init_sensing_with_burst+0x12>
     68e:	10 92 35 20 	sts	0x2035, r1	; 0x802035 <time_of_last_call_ms>
     692:	10 92 36 20 	sts	0x2036, r1	; 0x802036 <time_of_last_call_ms+0x1>
     696:	00 93 07 20 	sts	0x2007, r16	; 0x802007 <burst_proc>
     69a:	10 93 08 20 	sts	0x2008, r17	; 0x802008 <burst_proc+0x1>
     69e:	ce 01       	movw	r24, r28
     6a0:	06 d4       	rcall	.+2060   	; 0xeae <burst_init>
     6a2:	cd b7       	in	r28, 0x3d	; 61
     6a4:	de b7       	in	r29, 0x3e	; 62
     6a6:	e5 e0       	ldi	r30, 0x05	; 5
     6a8:	0c 94 20 0e 	jmp	0x1c40	; 0x1c40 <__epilogue_restores__+0x1a>

000006ac <qt_get_library_sig>:
     6ac:	fc 01       	movw	r30, r24
     6ae:	80 e4       	ldi	r24, 0x40	; 64
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	80 83       	st	Z, r24
     6b4:	91 83       	std	Z+1, r25	; 0x01
     6b6:	12 82       	std	Z+2, r1	; 0x02
     6b8:	13 82       	std	Z+3, r1	; 0x03
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	95 e0       	ldi	r25, 0x05	; 5
     6be:	84 83       	std	Z+4, r24	; 0x04
     6c0:	95 83       	std	Z+5, r25	; 0x05
     6c2:	08 95       	ret

000006c4 <qt_calibrate_sensing>:
     6c4:	cf 93       	push	r28
     6c6:	c0 e0       	ldi	r28, 0x00	; 0
     6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <qt_calibrate_sensing+0xc>
     6ca:	8c 2f       	mov	r24, r28
     6cc:	24 d1       	rcall	.+584    	; 0x916 <start_cal_sensor>
     6ce:	cf 5f       	subi	r28, 0xFF	; 255
     6d0:	80 91 3a 20 	lds	r24, 0x203A	; 0x80203a <num_sensors>
     6d4:	c8 17       	cp	r28, r24
     6d6:	c8 f3       	brcs	.-14     	; 0x6ca <qt_calibrate_sensing+0x6>
     6d8:	cf 91       	pop	r28
     6da:	08 95       	ret

000006dc <qt_reset_sensing>:
     6dc:	10 92 3a 20 	sts	0x203A, r1	; 0x80203a <num_sensors>
     6e0:	84 e0       	ldi	r24, 0x04	; 4
     6e2:	80 93 2f 20 	sts	0x202F, r24	; 0x80202f <qt_config_data+0x1>
     6e6:	84 e1       	ldi	r24, 0x14	; 20
     6e8:	80 93 32 20 	sts	0x2032, r24	; 0x802032 <qt_config_data+0x4>
     6ec:	95 e0       	ldi	r25, 0x05	; 5
     6ee:	90 93 33 20 	sts	0x2033, r25	; 0x802033 <qt_config_data+0x5>
     6f2:	10 92 31 20 	sts	0x2031, r1	; 0x802031 <qt_config_data+0x3>
     6f6:	80 93 30 20 	sts	0x2030, r24	; 0x802030 <qt_config_data+0x2>
     6fa:	ef e2       	ldi	r30, 0x2F	; 47
     6fc:	f0 e2       	ldi	r31, 0x20	; 32
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	82 93       	st	-Z, r24
     702:	83 e0       	ldi	r24, 0x03	; 3
     704:	86 83       	std	Z+6, r24	; 0x06
     706:	d8 d3       	rcall	.+1968   	; 0xeb8 <burst_reset>
     708:	10 92 0b 20 	sts	0x200B, r1	; 0x80200b <qt_filter_callback>
     70c:	10 92 0c 20 	sts	0x200C, r1	; 0x80200c <qt_filter_callback+0x1>
     710:	08 95       	ret

00000712 <qt_measure_sensors>:
     712:	1f 93       	push	r17
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
     718:	10 92 09 20 	sts	0x2009, r1	; 0x802009 <lib_status_flags>
     71c:	10 92 0a 20 	sts	0x200A, r1	; 0x80200a <lib_status_flags+0x1>
     720:	40 91 35 20 	lds	r20, 0x2035	; 0x802035 <time_of_last_call_ms>
     724:	50 91 36 20 	lds	r21, 0x2036	; 0x802036 <time_of_last_call_ms+0x1>
     728:	80 93 35 20 	sts	0x2035, r24	; 0x802035 <time_of_last_call_ms>
     72c:	90 93 36 20 	sts	0x2036, r25	; 0x802036 <time_of_last_call_ms+0x1>
     730:	20 91 37 20 	lds	r18, 0x2037	; 0x802037 <timer_prescale>
     734:	30 91 38 20 	lds	r19, 0x2038	; 0x802038 <timer_prescale+0x1>
     738:	24 1b       	sub	r18, r20
     73a:	35 0b       	sbc	r19, r21
     73c:	28 0f       	add	r18, r24
     73e:	39 1f       	adc	r19, r25
     740:	c0 e0       	ldi	r28, 0x00	; 0
     742:	03 c0       	rjmp	.+6      	; 0x74a <qt_measure_sensors+0x38>
     744:	28 5c       	subi	r18, 0xC8	; 200
     746:	30 40       	sbci	r19, 0x00	; 0
     748:	cf 5f       	subi	r28, 0xFF	; 255
     74a:	28 3c       	cpi	r18, 0xC8	; 200
     74c:	31 05       	cpc	r19, r1
     74e:	d0 f7       	brcc	.-12     	; 0x744 <qt_measure_sensors+0x32>
     750:	20 93 37 20 	sts	0x2037, r18	; 0x802037 <timer_prescale>
     754:	30 93 38 20 	sts	0x2038, r19	; 0x802038 <timer_prescale+0x1>
     758:	80 91 39 20 	lds	r24, 0x2039	; 0x802039 <dht_counter>
     75c:	88 23       	and	r24, r24
     75e:	41 f0       	breq	.+16     	; 0x770 <qt_measure_sensors+0x5e>
     760:	8c 17       	cp	r24, r28
     762:	18 f4       	brcc	.+6      	; 0x76a <qt_measure_sensors+0x58>
     764:	10 92 39 20 	sts	0x2039, r1	; 0x802039 <dht_counter>
     768:	03 c0       	rjmp	.+6      	; 0x770 <qt_measure_sensors+0x5e>
     76a:	8c 1b       	sub	r24, r28
     76c:	80 93 39 20 	sts	0x2039, r24	; 0x802039 <dht_counter>
     770:	b4 d3       	rcall	.+1896   	; 0xeda <burst>
     772:	e0 91 0b 20 	lds	r30, 0x200B	; 0x80200b <qt_filter_callback>
     776:	f0 91 0c 20 	lds	r31, 0x200C	; 0x80200c <qt_filter_callback+0x1>
     77a:	30 97       	sbiw	r30, 0x00	; 0
     77c:	09 f0       	breq	.+2      	; 0x780 <qt_measure_sensors+0x6e>
     77e:	19 95       	eicall
     780:	10 e0       	ldi	r17, 0x00	; 0
     782:	d0 e0       	ldi	r29, 0x00	; 0
     784:	05 c0       	rjmp	.+10     	; 0x790 <qt_measure_sensors+0x7e>
     786:	8d 2f       	mov	r24, r29
     788:	6c 2f       	mov	r22, r28
     78a:	d9 d0       	rcall	.+434    	; 0x93e <process_sensor>
     78c:	18 2b       	or	r17, r24
     78e:	df 5f       	subi	r29, 0xFF	; 255
     790:	50 91 3a 20 	lds	r21, 0x203A	; 0x80203a <num_sensors>
     794:	d5 17       	cp	r29, r21
     796:	b8 f3       	brcs	.-18     	; 0x786 <qt_measure_sensors+0x74>
     798:	11 23       	and	r17, r17
     79a:	49 f0       	breq	.+18     	; 0x7ae <qt_measure_sensors+0x9c>
     79c:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     7a0:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     7a4:	91 60       	ori	r25, 0x01	; 1
     7a6:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     7aa:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     7ae:	10 92 2d 20 	sts	0x202D, r1	; 0x80202d <qt_measure_data+0x20>
     7b2:	ab e3       	ldi	r26, 0x3B	; 59
     7b4:	b0 e2       	ldi	r27, 0x20	; 32
     7b6:	40 e0       	ldi	r20, 0x00	; 0
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	18 c0       	rjmp	.+48     	; 0x7ee <qt_measure_sensors+0xdc>
     7be:	2c 91       	ld	r18, X
     7c0:	28 71       	andi	r18, 0x18	; 24
     7c2:	99 f0       	breq	.+38     	; 0x7ea <qt_measure_sensors+0xd8>
     7c4:	e4 2f       	mov	r30, r20
     7c6:	e6 95       	lsr	r30
     7c8:	e6 95       	lsr	r30
     7ca:	e6 95       	lsr	r30
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	e3 5f       	subi	r30, 0xF3	; 243
     7d0:	ff 4d       	sbci	r31, 0xDF	; 223
     7d2:	24 2f       	mov	r18, r20
     7d4:	27 70       	andi	r18, 0x07	; 7
     7d6:	bc 01       	movw	r22, r24
     7d8:	02 c0       	rjmp	.+4      	; 0x7de <qt_measure_sensors+0xcc>
     7da:	66 0f       	add	r22, r22
     7dc:	77 1f       	adc	r23, r23
     7de:	2a 95       	dec	r18
     7e0:	e2 f7       	brpl	.-8      	; 0x7da <qt_measure_sensors+0xc8>
     7e2:	9b 01       	movw	r18, r22
     7e4:	30 a1       	ldd	r19, Z+32	; 0x20
     7e6:	32 2b       	or	r19, r18
     7e8:	30 a3       	std	Z+32, r19	; 0x20
     7ea:	4f 5f       	subi	r20, 0xFF	; 255
     7ec:	16 96       	adiw	r26, 0x06	; 6
     7ee:	45 17       	cp	r20, r21
     7f0:	31 f7       	brne	.-52     	; 0x7be <qt_measure_sensors+0xac>
     7f2:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     7f6:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     7fa:	df 91       	pop	r29
     7fc:	cf 91       	pop	r28
     7fe:	1f 91       	pop	r17
     800:	08 95       	ret

00000802 <qt_enable_key>:
     802:	90 91 3a 20 	lds	r25, 0x203A	; 0x80203a <num_sensors>
     806:	a9 2f       	mov	r26, r25
     808:	b0 e0       	ldi	r27, 0x00	; 0
     80a:	fd 01       	movw	r30, r26
     80c:	ee 0f       	add	r30, r30
     80e:	ff 1f       	adc	r31, r31
     810:	ea 0f       	add	r30, r26
     812:	fb 1f       	adc	r31, r27
     814:	ee 0f       	add	r30, r30
     816:	ff 1f       	adc	r31, r31
     818:	e5 5c       	subi	r30, 0xC5	; 197
     81a:	ff 4d       	sbci	r31, 0xDF	; 223
     81c:	43 83       	std	Z+3, r20	; 0x03
     81e:	67 70       	andi	r22, 0x07	; 7
     820:	85 83       	std	Z+5, r24	; 0x05
     822:	23 70       	andi	r18, 0x03	; 3
     824:	66 0f       	add	r22, r22
     826:	66 0f       	add	r22, r22
     828:	66 0f       	add	r22, r22
     82a:	26 2b       	or	r18, r22
     82c:	24 83       	std	Z+4, r18	; 0x04
     82e:	9f 5f       	subi	r25, 0xFF	; 255
     830:	90 93 3a 20 	sts	0x203A, r25	; 0x80203a <num_sensors>
     834:	08 95       	ret

00000836 <qt_get_sensor_delta>:
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	c8 2f       	mov	r28, r24
     83e:	d0 e0       	ldi	r29, 0x00	; 0
     840:	fe 01       	movw	r30, r28
     842:	ee 0f       	add	r30, r30
     844:	ff 1f       	adc	r31, r31
     846:	ec 0f       	add	r30, r28
     848:	fd 1f       	adc	r31, r29
     84a:	ee 0f       	add	r30, r30
     84c:	ff 1f       	adc	r31, r31
     84e:	e5 5c       	subi	r30, 0xC5	; 197
     850:	ff 4d       	sbci	r31, 0xDF	; 223
     852:	95 81       	ldd	r25, Z+5	; 0x05
     854:	23 81       	ldd	r18, Z+3	; 0x03
     856:	30 e0       	ldi	r19, 0x00	; 0
     858:	00 90 2e 20 	lds	r0, 0x202E	; 0x80202e <qt_config_data>
     85c:	02 c0       	rjmp	.+4      	; 0x862 <qt_get_sensor_delta+0x2c>
     85e:	35 95       	asr	r19
     860:	27 95       	ror	r18
     862:	0a 94       	dec	r0
     864:	e2 f7       	brpl	.-8      	; 0x85e <qt_get_sensor_delta+0x28>
     866:	12 2f       	mov	r17, r18
     868:	24 30       	cpi	r18, 0x04	; 4
     86a:	08 f4       	brcc	.+2      	; 0x86e <qt_get_sensor_delta+0x38>
     86c:	14 e0       	ldi	r17, 0x04	; 4
     86e:	20 91 3a 20 	lds	r18, 0x203A	; 0x80203a <num_sensors>
     872:	82 17       	cp	r24, r18
     874:	60 f5       	brcc	.+88     	; 0x8ce <qt_get_sensor_delta+0x98>
     876:	89 2f       	mov	r24, r25
     878:	04 d3       	rcall	.+1544   	; 0xe82 <get_channel_delta>
     87a:	41 2f       	mov	r20, r17
     87c:	50 e0       	ldi	r21, 0x00	; 0
     87e:	16 95       	lsr	r17
     880:	16 95       	lsr	r17
     882:	21 2f       	mov	r18, r17
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	24 1b       	sub	r18, r20
     888:	35 0b       	sbc	r19, r21
     88a:	28 17       	cp	r18, r24
     88c:	39 07       	cpc	r19, r25
     88e:	64 f4       	brge	.+24     	; 0x8a8 <qt_get_sensor_delta+0x72>
     890:	fe 01       	movw	r30, r28
     892:	ee 0f       	add	r30, r30
     894:	ff 1f       	adc	r31, r31
     896:	ec 0f       	add	r30, r28
     898:	fd 1f       	adc	r31, r29
     89a:	ee 0f       	add	r30, r30
     89c:	ff 1f       	adc	r31, r31
     89e:	e5 5c       	subi	r30, 0xC5	; 197
     8a0:	ff 4d       	sbci	r31, 0xDF	; 223
     8a2:	24 81       	ldd	r18, Z+4	; 0x04
     8a4:	2b 7f       	andi	r18, 0xFB	; 251
     8a6:	24 83       	std	Z+4, r18	; 0x04
     8a8:	50 95       	com	r21
     8aa:	41 95       	neg	r20
     8ac:	5f 4f       	sbci	r21, 0xFF	; 255
     8ae:	48 17       	cp	r20, r24
     8b0:	59 07       	cpc	r21, r25
     8b2:	7c f0       	brlt	.+30     	; 0x8d2 <qt_get_sensor_delta+0x9c>
     8b4:	fe 01       	movw	r30, r28
     8b6:	ee 0f       	add	r30, r30
     8b8:	ff 1f       	adc	r31, r31
     8ba:	ec 0f       	add	r30, r28
     8bc:	fd 1f       	adc	r31, r29
     8be:	ee 0f       	add	r30, r30
     8c0:	ff 1f       	adc	r31, r31
     8c2:	e5 5c       	subi	r30, 0xC5	; 197
     8c4:	ff 4d       	sbci	r31, 0xDF	; 223
     8c6:	24 81       	ldd	r18, Z+4	; 0x04
     8c8:	24 60       	ori	r18, 0x04	; 4
     8ca:	24 83       	std	Z+4, r18	; 0x04
     8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <qt_get_sensor_delta+0x9c>
     8ce:	80 e0       	ldi	r24, 0x00	; 0
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	1f 91       	pop	r17
     8d8:	08 95       	ret

000008da <goto_no_detect>:
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	fc 01       	movw	r30, r24
     8de:	ee 0f       	add	r30, r30
     8e0:	ff 1f       	adc	r31, r31
     8e2:	e8 0f       	add	r30, r24
     8e4:	f9 1f       	adc	r31, r25
     8e6:	ee 0f       	add	r30, r30
     8e8:	ff 1f       	adc	r31, r31
     8ea:	e5 5c       	subi	r30, 0xC5	; 197
     8ec:	ff 4d       	sbci	r31, 0xDF	; 223
     8ee:	25 81       	ldd	r18, Z+5	; 0x05
     8f0:	82 e0       	ldi	r24, 0x02	; 2
     8f2:	80 83       	st	Z, r24
     8f4:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     8f8:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     8fc:	82 60       	ori	r24, 0x02	; 2
     8fe:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     902:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     906:	12 82       	std	Z+2, r1	; 0x02
     908:	eb e6       	ldi	r30, 0x6B	; 107
     90a:	f0 e2       	ldi	r31, 0x20	; 32
     90c:	e2 0f       	add	r30, r18
     90e:	f1 1d       	adc	r31, r1
     910:	80 e8       	ldi	r24, 0x80	; 128
     912:	80 83       	st	Z, r24
     914:	08 95       	ret

00000916 <start_cal_sensor>:
     916:	cf 93       	push	r28
     918:	c8 2f       	mov	r28, r24
     91a:	df df       	rcall	.-66     	; 0x8da <goto_no_detect>
     91c:	8c 2f       	mov	r24, r28
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	fc 01       	movw	r30, r24
     922:	ee 0f       	add	r30, r30
     924:	ff 1f       	adc	r31, r31
     926:	e8 0f       	add	r30, r24
     928:	f9 1f       	adc	r31, r25
     92a:	ee 0f       	add	r30, r30
     92c:	ff 1f       	adc	r31, r31
     92e:	e5 5c       	subi	r30, 0xC5	; 197
     930:	ff 4d       	sbci	r31, 0xDF	; 223
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	80 83       	st	Z, r24
     936:	8f e0       	ldi	r24, 0x0F	; 15
     938:	81 83       	std	Z+1, r24	; 0x01
     93a:	cf 91       	pop	r28
     93c:	08 95       	ret

0000093e <process_sensor>:
     93e:	2f 92       	push	r2
     940:	3f 92       	push	r3
     942:	4f 92       	push	r4
     944:	5f 92       	push	r5
     946:	6f 92       	push	r6
     948:	7f 92       	push	r7
     94a:	8f 92       	push	r8
     94c:	9f 92       	push	r9
     94e:	bf 92       	push	r11
     950:	cf 92       	push	r12
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	cf 93       	push	r28
     95e:	df 93       	push	r29
     960:	0f 92       	push	r0
     962:	cd b7       	in	r28, 0x3d	; 61
     964:	de b7       	in	r29, 0x3e	; 62
     966:	08 2f       	mov	r16, r24
     968:	16 2f       	mov	r17, r22
     96a:	65 df       	rcall	.-310    	; 0x836 <qt_get_sensor_delta>
     96c:	4c 01       	movw	r8, r24
     96e:	c0 2e       	mov	r12, r16
     970:	dd 24       	eor	r13, r13
     972:	b6 01       	movw	r22, r12
     974:	66 0f       	add	r22, r22
     976:	77 1f       	adc	r23, r23
     978:	fb 01       	movw	r30, r22
     97a:	ec 0d       	add	r30, r12
     97c:	fd 1d       	adc	r31, r13
     97e:	ee 0f       	add	r30, r30
     980:	ff 1f       	adc	r31, r31
     982:	e5 5c       	subi	r30, 0xC5	; 197
     984:	ff 4d       	sbci	r31, 0xDF	; 223
     986:	24 81       	ldd	r18, Z+4	; 0x04
     988:	43 81       	ldd	r20, Z+3	; 0x03
     98a:	50 e0       	ldi	r21, 0x00	; 0
     98c:	82 2f       	mov	r24, r18
     98e:	83 70       	andi	r24, 0x03	; 3
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	01 96       	adiw	r24, 0x01	; 1
     994:	fa 01       	movw	r30, r20
     996:	02 c0       	rjmp	.+4      	; 0x99c <process_sensor+0x5e>
     998:	f5 95       	asr	r31
     99a:	e7 95       	ror	r30
     99c:	8a 95       	dec	r24
     99e:	e2 f7       	brpl	.-8      	; 0x998 <process_sensor+0x5a>
     9a0:	cf 01       	movw	r24, r30
     9a2:	e2 30       	cpi	r30, 0x02	; 2
     9a4:	08 f4       	brcc	.+2      	; 0x9a8 <process_sensor+0x6a>
     9a6:	82 e0       	ldi	r24, 0x02	; 2
     9a8:	da 01       	movw	r26, r20
     9aa:	a8 1b       	sub	r26, r24
     9ac:	b1 09       	sbc	r27, r1
     9ae:	fb 01       	movw	r30, r22
     9b0:	ec 0d       	add	r30, r12
     9b2:	fd 1d       	adc	r31, r13
     9b4:	ee 0f       	add	r30, r30
     9b6:	ff 1f       	adc	r31, r31
     9b8:	e5 5c       	subi	r30, 0xC5	; 197
     9ba:	ff 4d       	sbci	r31, 0xDF	; 223
     9bc:	80 81       	ld	r24, Z
     9be:	84 30       	cpi	r24, 0x04	; 4
     9c0:	09 f4       	brne	.+2      	; 0x9c4 <process_sensor+0x86>
     9c2:	e3 c0       	rjmp	.+454    	; 0xb8a <process_sensor+0x24c>
     9c4:	85 30       	cpi	r24, 0x05	; 5
     9c6:	30 f4       	brcc	.+12     	; 0x9d4 <process_sensor+0x96>
     9c8:	81 30       	cpi	r24, 0x01	; 1
     9ca:	71 f0       	breq	.+28     	; 0x9e8 <process_sensor+0xaa>
     9cc:	82 30       	cpi	r24, 0x02	; 2
     9ce:	09 f0       	breq	.+2      	; 0x9d2 <process_sensor+0x94>
     9d0:	44 c2       	rjmp	.+1160   	; 0xe5a <process_sensor+0x51c>
     9d2:	60 c0       	rjmp	.+192    	; 0xa94 <process_sensor+0x156>
     9d4:	80 31       	cpi	r24, 0x10	; 16
     9d6:	09 f4       	brne	.+2      	; 0x9da <process_sensor+0x9c>
     9d8:	77 c1       	rjmp	.+750    	; 0xcc8 <process_sensor+0x38a>
     9da:	80 32       	cpi	r24, 0x20	; 32
     9dc:	09 f4       	brne	.+2      	; 0x9e0 <process_sensor+0xa2>
     9de:	15 c2       	rjmp	.+1066   	; 0xe0a <process_sensor+0x4cc>
     9e0:	88 30       	cpi	r24, 0x08	; 8
     9e2:	09 f0       	breq	.+2      	; 0x9e6 <process_sensor+0xa8>
     9e4:	3a c2       	rjmp	.+1140   	; 0xe5a <process_sensor+0x51c>
     9e6:	d8 c1       	rjmp	.+944    	; 0xd98 <process_sensor+0x45a>
     9e8:	40 91 09 20 	lds	r20, 0x2009	; 0x802009 <lib_status_flags>
     9ec:	50 91 0a 20 	lds	r21, 0x200A	; 0x80200a <lib_status_flags+0x1>
     9f0:	ca 01       	movw	r24, r20
     9f2:	92 60       	ori	r25, 0x02	; 2
     9f4:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     9f8:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     9fc:	85 81       	ldd	r24, Z+5	; 0x05
     9fe:	61 81       	ldd	r22, Z+1	; 0x01
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	6a 30       	cpi	r22, 0x0A	; 10
     a04:	80 f0       	brcs	.+32     	; 0xa26 <process_sensor+0xe8>
     a06:	fc 01       	movw	r30, r24
     a08:	ee 0f       	add	r30, r30
     a0a:	ff 1f       	adc	r31, r31
     a0c:	e3 5e       	subi	r30, 0xE3	; 227
     a0e:	ff 4d       	sbci	r31, 0xDF	; 223
     a10:	dc 01       	movw	r26, r24
     a12:	aa 0f       	add	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	a3 5f       	subi	r26, 0xF3	; 243
     a18:	bf 4d       	sbci	r27, 0xDF	; 223
     a1a:	8d 91       	ld	r24, X+
     a1c:	9c 91       	ld	r25, X
     a1e:	11 97       	sbiw	r26, 0x01	; 1
     a20:	80 83       	st	Z, r24
     a22:	91 83       	std	Z+1, r25	; 0x01
     a24:	1d c0       	rjmp	.+58     	; 0xa60 <process_sensor+0x122>
     a26:	dc 01       	movw	r26, r24
     a28:	aa 0f       	add	r26, r26
     a2a:	bb 1f       	adc	r27, r27
     a2c:	a3 5e       	subi	r26, 0xE3	; 227
     a2e:	bf 4d       	sbci	r27, 0xDF	; 223
     a30:	2d 91       	ld	r18, X+
     a32:	3c 91       	ld	r19, X
     a34:	11 97       	sbiw	r26, 0x01	; 1
     a36:	fc 01       	movw	r30, r24
     a38:	ee 0f       	add	r30, r30
     a3a:	ff 1f       	adc	r31, r31
     a3c:	e3 5f       	subi	r30, 0xF3	; 243
     a3e:	ff 4d       	sbci	r31, 0xDF	; 223
     a40:	80 81       	ld	r24, Z
     a42:	91 81       	ldd	r25, Z+1	; 0x01
     a44:	82 17       	cp	r24, r18
     a46:	93 07       	cpc	r25, r19
     a48:	18 f4       	brcc	.+6      	; 0xa50 <process_sensor+0x112>
     a4a:	21 50       	subi	r18, 0x01	; 1
     a4c:	30 40       	sbci	r19, 0x00	; 0
     a4e:	05 c0       	rjmp	.+10     	; 0xa5a <process_sensor+0x11c>
     a50:	28 17       	cp	r18, r24
     a52:	39 07       	cpc	r19, r25
     a54:	58 f4       	brcc	.+22     	; 0xa6c <process_sensor+0x12e>
     a56:	2f 5f       	subi	r18, 0xFF	; 255
     a58:	3f 4f       	sbci	r19, 0xFF	; 255
     a5a:	2d 93       	st	X+, r18
     a5c:	3c 93       	st	X, r19
     a5e:	11 97       	sbiw	r26, 0x01	; 1
     a60:	48 60       	ori	r20, 0x08	; 8
     a62:	52 60       	ori	r21, 0x02	; 2
     a64:	40 93 09 20 	sts	0x2009, r20	; 0x802009 <lib_status_flags>
     a68:	50 93 0a 20 	sts	0x200A, r21	; 0x80200a <lib_status_flags+0x1>
     a6c:	61 50       	subi	r22, 0x01	; 1
     a6e:	f6 01       	movw	r30, r12
     a70:	ee 0f       	add	r30, r30
     a72:	ff 1f       	adc	r31, r31
     a74:	ec 0d       	add	r30, r12
     a76:	fd 1d       	adc	r31, r13
     a78:	ee 0f       	add	r30, r30
     a7a:	ff 1f       	adc	r31, r31
     a7c:	e5 5c       	subi	r30, 0xC5	; 197
     a7e:	ff 4d       	sbci	r31, 0xDF	; 223
     a80:	61 83       	std	Z+1, r22	; 0x01
     a82:	66 23       	and	r22, r22
     a84:	11 f4       	brne	.+4      	; 0xa8a <process_sensor+0x14c>
     a86:	80 2f       	mov	r24, r16
     a88:	28 df       	rcall	.-432    	; 0x8da <goto_no_detect>
     a8a:	80 91 30 20 	lds	r24, 0x2030	; 0x802030 <qt_config_data+0x2>
     a8e:	80 93 39 20 	sts	0x2039, r24	; 0x802039 <dht_counter>
     a92:	db c1       	rjmp	.+950    	; 0xe4a <process_sensor+0x50c>
     a94:	22 ff       	sbrs	r18, 2
     a96:	08 c0       	rjmp	.+16     	; 0xaa8 <process_sensor+0x16a>
     a98:	a5 81       	ldd	r26, Z+5	; 0x05
     a9a:	b0 e0       	ldi	r27, 0x00	; 0
     a9c:	a5 59       	subi	r26, 0x95	; 149
     a9e:	bf 4d       	sbci	r27, 0xDF	; 223
     aa0:	1c 92       	st	X, r1
     aa2:	80 e2       	ldi	r24, 0x20	; 32
     aa4:	80 83       	st	Z, r24
     aa6:	c8 c1       	rjmp	.+912    	; 0xe38 <process_sensor+0x4fa>
     aa8:	c4 01       	movw	r24, r8
     aaa:	97 fe       	sbrs	r9, 7
     aac:	02 c0       	rjmp	.+4      	; 0xab2 <process_sensor+0x174>
     aae:	80 e0       	ldi	r24, 0x00	; 0
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	84 17       	cp	r24, r20
     ab4:	95 07       	cpc	r25, r21
     ab6:	68 f0       	brcs	.+26     	; 0xad2 <process_sensor+0x194>
     ab8:	f6 01       	movw	r30, r12
     aba:	ee 0f       	add	r30, r30
     abc:	ff 1f       	adc	r31, r31
     abe:	ec 0d       	add	r30, r12
     ac0:	fd 1d       	adc	r31, r13
     ac2:	ee 0f       	add	r30, r30
     ac4:	ff 1f       	adc	r31, r31
     ac6:	e5 5c       	subi	r30, 0xC5	; 197
     ac8:	ff 4d       	sbci	r31, 0xDF	; 223
     aca:	84 e0       	ldi	r24, 0x04	; 4
     acc:	80 83       	st	Z, r24
     ace:	12 82       	std	Z+2, r1	; 0x02
     ad0:	be c1       	rjmp	.+892    	; 0xe4e <process_sensor+0x510>
     ad2:	11 23       	and	r17, r17
     ad4:	09 f4       	brne	.+2      	; 0xad8 <process_sensor+0x19a>
     ad6:	c1 c1       	rjmp	.+898    	; 0xe5a <process_sensor+0x51c>
     ad8:	80 91 39 20 	lds	r24, 0x2039	; 0x802039 <dht_counter>
     adc:	88 23       	and	r24, r24
     ade:	09 f0       	breq	.+2      	; 0xae2 <process_sensor+0x1a4>
     ae0:	bc c1       	rjmp	.+888    	; 0xe5a <process_sensor+0x51c>
     ae2:	f6 01       	movw	r30, r12
     ae4:	ee 0f       	add	r30, r30
     ae6:	ff 1f       	adc	r31, r31
     ae8:	ec 0d       	add	r30, r12
     aea:	fd 1d       	adc	r31, r13
     aec:	ee 0f       	add	r30, r30
     aee:	ff 1f       	adc	r31, r31
     af0:	e5 5c       	subi	r30, 0xC5	; 197
     af2:	ff 4d       	sbci	r31, 0xDF	; 223
     af4:	25 81       	ldd	r18, Z+5	; 0x05
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	d9 01       	movw	r26, r18
     afa:	aa 0f       	add	r26, r26
     afc:	bb 1f       	adc	r27, r27
     afe:	a3 5e       	subi	r26, 0xE3	; 227
     b00:	bf 4d       	sbci	r27, 0xDF	; 223
     b02:	8d 91       	ld	r24, X+
     b04:	9c 91       	ld	r25, X
     b06:	11 97       	sbiw	r26, 0x01	; 1
     b08:	f9 01       	movw	r30, r18
     b0a:	ee 0f       	add	r30, r30
     b0c:	ff 1f       	adc	r31, r31
     b0e:	e3 5f       	subi	r30, 0xF3	; 243
     b10:	ff 4d       	sbci	r31, 0xDF	; 223
     b12:	40 81       	ld	r20, Z
     b14:	51 81       	ldd	r21, Z+1	; 0x01
     b16:	f9 01       	movw	r30, r18
     b18:	e5 59       	subi	r30, 0x95	; 149
     b1a:	ff 4d       	sbci	r31, 0xDF	; 223
     b1c:	84 17       	cp	r24, r20
     b1e:	95 07       	cpc	r25, r21
     b20:	68 f4       	brcc	.+26     	; 0xb3c <process_sensor+0x1fe>
     b22:	20 81       	ld	r18, Z
     b24:	21 0f       	add	r18, r17
     b26:	20 83       	st	Z, r18
     b28:	30 91 33 20 	lds	r19, 0x2033	; 0x802033 <qt_config_data+0x5>
     b2c:	30 58       	subi	r19, 0x80	; 128
     b2e:	23 17       	cp	r18, r19
     b30:	08 f4       	brcc	.+2      	; 0xb34 <process_sensor+0x1f6>
     b32:	93 c1       	rjmp	.+806    	; 0xe5a <process_sensor+0x51c>
     b34:	20 e8       	ldi	r18, 0x80	; 128
     b36:	20 83       	st	Z, r18
     b38:	01 96       	adiw	r24, 0x01	; 1
     b3a:	10 c0       	rjmp	.+32     	; 0xb5c <process_sensor+0x21e>
     b3c:	48 17       	cp	r20, r24
     b3e:	59 07       	cpc	r21, r25
     b40:	d0 f4       	brcc	.+52     	; 0xb76 <process_sensor+0x238>
     b42:	20 81       	ld	r18, Z
     b44:	21 1b       	sub	r18, r17
     b46:	20 83       	st	Z, r18
     b48:	30 e8       	ldi	r19, 0x80	; 128
     b4a:	40 91 32 20 	lds	r20, 0x2032	; 0x802032 <qt_config_data+0x4>
     b4e:	53 2f       	mov	r21, r19
     b50:	54 1b       	sub	r21, r20
     b52:	52 17       	cp	r21, r18
     b54:	08 f4       	brcc	.+2      	; 0xb58 <process_sensor+0x21a>
     b56:	81 c1       	rjmp	.+770    	; 0xe5a <process_sensor+0x51c>
     b58:	30 83       	st	Z, r19
     b5a:	01 97       	sbiw	r24, 0x01	; 1
     b5c:	8d 93       	st	X+, r24
     b5e:	9c 93       	st	X, r25
     b60:	11 97       	sbiw	r26, 0x01	; 1
     b62:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     b66:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     b6a:	88 60       	ori	r24, 0x08	; 8
     b6c:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     b70:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     b74:	72 c1       	rjmp	.+740    	; 0xe5a <process_sensor+0x51c>
     b76:	80 81       	ld	r24, Z
     b78:	81 38       	cpi	r24, 0x81	; 129
     b7a:	10 f0       	brcs	.+4      	; 0xb80 <process_sensor+0x242>
     b7c:	81 50       	subi	r24, 0x01	; 1
     b7e:	80 83       	st	Z, r24
     b80:	80 81       	ld	r24, Z
     b82:	87 fd       	sbrc	r24, 7
     b84:	6a c1       	rjmp	.+724    	; 0xe5a <process_sensor+0x51c>
     b86:	8f 5f       	subi	r24, 0xFF	; 255
     b88:	4c c1       	rjmp	.+664    	; 0xe22 <process_sensor+0x4e4>
     b8a:	c4 01       	movw	r24, r8
     b8c:	97 fe       	sbrs	r9, 7
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <process_sensor+0x256>
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	84 17       	cp	r24, r20
     b96:	95 07       	cpc	r25, r21
     b98:	08 f4       	brcc	.+2      	; 0xb9c <process_sensor+0x25e>
     b9a:	45 c1       	rjmp	.+650    	; 0xe26 <process_sensor+0x4e8>
     b9c:	80 91 30 20 	lds	r24, 0x2030	; 0x802030 <qt_config_data+0x2>
     ba0:	80 93 39 20 	sts	0x2039, r24	; 0x802039 <dht_counter>
     ba4:	f6 01       	movw	r30, r12
     ba6:	ee 0f       	add	r30, r30
     ba8:	ff 1f       	adc	r31, r31
     baa:	ec 0d       	add	r30, r12
     bac:	fd 1d       	adc	r31, r13
     bae:	ee 0f       	add	r30, r30
     bb0:	ff 1f       	adc	r31, r31
     bb2:	e5 5c       	subi	r30, 0xC5	; 197
     bb4:	ff 4d       	sbci	r31, 0xDF	; 223
     bb6:	82 81       	ldd	r24, Z+2	; 0x02
     bb8:	8f 5f       	subi	r24, 0xFF	; 255
     bba:	82 83       	std	Z+2, r24	; 0x02
     bbc:	84 81       	ldd	r24, Z+4	; 0x04
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	88 73       	andi	r24, 0x38	; 56
     bc2:	90 70       	andi	r25, 0x00	; 0
     bc4:	a3 e0       	ldi	r26, 0x03	; 3
     bc6:	96 95       	lsr	r25
     bc8:	87 95       	ror	r24
     bca:	aa 95       	dec	r26
     bcc:	e1 f7       	brne	.-8      	; 0xbc6 <process_sensor+0x288>
     bce:	b8 2e       	mov	r11, r24
     bd0:	88 23       	and	r24, r24
     bd2:	d1 f5       	brne	.+116    	; 0xc48 <process_sensor+0x30a>
     bd4:	4d c0       	rjmp	.+154    	; 0xc70 <process_sensor+0x332>
     bd6:	10 17       	cp	r17, r16
     bd8:	a9 f1       	breq	.+106    	; 0xc44 <process_sensor+0x306>
     bda:	81 2f       	mov	r24, r17
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	1c 01       	movw	r2, r24
     be0:	22 0c       	add	r2, r2
     be2:	33 1c       	adc	r3, r3
     be4:	28 0e       	add	r2, r24
     be6:	39 1e       	adc	r3, r25
     be8:	22 0c       	add	r2, r2
     bea:	33 1c       	adc	r3, r3
     bec:	6b e3       	ldi	r22, 0x3B	; 59
     bee:	70 e2       	ldi	r23, 0x20	; 32
     bf0:	26 0e       	add	r2, r22
     bf2:	37 1e       	adc	r3, r23
     bf4:	f1 01       	movw	r30, r2
     bf6:	84 81       	ldd	r24, Z+4	; 0x04
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	88 73       	andi	r24, 0x38	; 56
     bfc:	90 70       	andi	r25, 0x00	; 0
     bfe:	53 e0       	ldi	r21, 0x03	; 3
     c00:	96 95       	lsr	r25
     c02:	87 95       	ror	r24
     c04:	5a 95       	dec	r21
     c06:	e1 f7       	brne	.-8      	; 0xc00 <process_sensor+0x2c2>
     c08:	b8 16       	cp	r11, r24
     c0a:	e1 f4       	brne	.+56     	; 0xc44 <process_sensor+0x306>
     c0c:	81 2f       	mov	r24, r17
     c0e:	29 83       	std	Y+1, r18	; 0x01
     c10:	12 de       	rcall	.-988    	; 0x836 <qt_get_sensor_delta>
     c12:	f1 01       	movw	r30, r2
     c14:	33 81       	ldd	r19, Z+3	; 0x03
     c16:	ac 01       	movw	r20, r24
     c18:	43 1b       	sub	r20, r19
     c1a:	51 09       	sbc	r21, r1
     c1c:	f2 01       	movw	r30, r4
     c1e:	80 81       	ld	r24, Z
     c20:	b4 01       	movw	r22, r8
     c22:	68 1b       	sub	r22, r24
     c24:	71 09       	sbc	r23, r1
     c26:	29 81       	ldd	r18, Y+1	; 0x01
     c28:	64 17       	cp	r22, r20
     c2a:	75 07       	cpc	r23, r21
     c2c:	14 f4       	brge	.+4      	; 0xc32 <process_sensor+0x2f4>
     c2e:	f3 01       	movw	r30, r6
     c30:	07 c0       	rjmp	.+14     	; 0xc40 <process_sensor+0x302>
     c32:	f1 01       	movw	r30, r2
     c34:	80 81       	ld	r24, Z
     c36:	80 31       	cpi	r24, 0x10	; 16
     c38:	11 f0       	breq	.+4      	; 0xc3e <process_sensor+0x300>
     c3a:	88 30       	cpi	r24, 0x08	; 8
     c3c:	19 f4       	brne	.+6      	; 0xc44 <process_sensor+0x306>
     c3e:	f7 01       	movw	r30, r14
     c40:	10 82       	st	Z, r1
     c42:	21 e0       	ldi	r18, 0x01	; 1
     c44:	1f 5f       	subi	r17, 0xFF	; 255
     c46:	0d c0       	rjmp	.+26     	; 0xc62 <process_sensor+0x324>
     c48:	20 e0       	ldi	r18, 0x00	; 0
     c4a:	10 e0       	ldi	r17, 0x00	; 0
     c4c:	83 e0       	ldi	r24, 0x03	; 3
     c4e:	48 2e       	mov	r4, r24
     c50:	51 2c       	mov	r5, r1
     c52:	4e 0e       	add	r4, r30
     c54:	5f 1e       	adc	r5, r31
     c56:	7f 01       	movw	r14, r30
     c58:	62 e0       	ldi	r22, 0x02	; 2
     c5a:	70 e0       	ldi	r23, 0x00	; 0
     c5c:	e6 0e       	add	r14, r22
     c5e:	f7 1e       	adc	r15, r23
     c60:	37 01       	movw	r6, r14
     c62:	80 91 3a 20 	lds	r24, 0x203A	; 0x80203a <num_sensors>
     c66:	18 17       	cp	r17, r24
     c68:	08 f4       	brcc	.+2      	; 0xc6c <process_sensor+0x32e>
     c6a:	b5 cf       	rjmp	.-150    	; 0xbd6 <process_sensor+0x298>
     c6c:	22 23       	and	r18, r18
     c6e:	79 f4       	brne	.+30     	; 0xc8e <process_sensor+0x350>
     c70:	80 91 2f 20 	lds	r24, 0x202F	; 0x80202f <qt_config_data+0x1>
     c74:	88 23       	and	r24, r24
     c76:	59 f0       	breq	.+22     	; 0xc8e <process_sensor+0x350>
     c78:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     c7c:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     c80:	98 60       	ori	r25, 0x08	; 8
     c82:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     c86:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	01 c0       	rjmp	.+2      	; 0xc90 <process_sensor+0x352>
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	f6 01       	movw	r30, r12
     c92:	ee 0f       	add	r30, r30
     c94:	ff 1f       	adc	r31, r31
     c96:	ec 0d       	add	r30, r12
     c98:	fd 1d       	adc	r31, r13
     c9a:	ee 0f       	add	r30, r30
     c9c:	ff 1f       	adc	r31, r31
     c9e:	e5 5c       	subi	r30, 0xC5	; 197
     ca0:	ff 4d       	sbci	r31, 0xDF	; 223
     ca2:	22 81       	ldd	r18, Z+2	; 0x02
     ca4:	90 91 2f 20 	lds	r25, 0x202F	; 0x80202f <qt_config_data+0x1>
     ca8:	29 17       	cp	r18, r25
     caa:	08 f4       	brcc	.+2      	; 0xcae <process_sensor+0x370>
     cac:	d7 c0       	rjmp	.+430    	; 0xe5c <process_sensor+0x51e>
     cae:	20 91 09 20 	lds	r18, 0x2009	; 0x802009 <lib_status_flags>
     cb2:	30 91 0a 20 	lds	r19, 0x200A	; 0x80200a <lib_status_flags+0x1>
     cb6:	23 60       	ori	r18, 0x03	; 3
     cb8:	20 93 09 20 	sts	0x2009, r18	; 0x802009 <lib_status_flags>
     cbc:	30 93 0a 20 	sts	0x200A, r19	; 0x80200a <lib_status_flags+0x1>
     cc0:	90 e1       	ldi	r25, 0x10	; 16
     cc2:	90 83       	st	Z, r25
     cc4:	11 82       	std	Z+1, r1	; 0x01
     cc6:	ca c0       	rjmp	.+404    	; 0xe5c <process_sensor+0x51e>
     cc8:	40 91 09 20 	lds	r20, 0x2009	; 0x802009 <lib_status_flags>
     ccc:	50 91 0a 20 	lds	r21, 0x200A	; 0x80200a <lib_status_flags+0x1>
     cd0:	22 ff       	sbrs	r18, 2
     cd2:	0e c0       	rjmp	.+28     	; 0xcf0 <process_sensor+0x3b2>
     cd4:	a5 81       	ldd	r26, Z+5	; 0x05
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	a5 59       	subi	r26, 0x95	; 149
     cda:	bf 4d       	sbci	r27, 0xDF	; 223
     cdc:	80 e8       	ldi	r24, 0x80	; 128
     cde:	8c 93       	st	X, r24
     ce0:	80 e2       	ldi	r24, 0x20	; 32
     ce2:	80 83       	st	Z, r24
     ce4:	50 61       	ori	r21, 0x10	; 16
     ce6:	40 93 09 20 	sts	0x2009, r20	; 0x802009 <lib_status_flags>
     cea:	50 93 0a 20 	sts	0x200A, r21	; 0x80200a <lib_status_flags+0x1>
     cee:	4c c0       	rjmp	.+152    	; 0xd88 <process_sensor+0x44a>
     cf0:	c4 01       	movw	r24, r8
     cf2:	97 fe       	sbrs	r9, 7
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <process_sensor+0x3bc>
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	96 01       	movw	r18, r12
     cfc:	22 0f       	add	r18, r18
     cfe:	33 1f       	adc	r19, r19
     d00:	8a 17       	cp	r24, r26
     d02:	9b 07       	cpc	r25, r27
     d04:	78 f4       	brcc	.+30     	; 0xd24 <process_sensor+0x3e6>
     d06:	2c 0d       	add	r18, r12
     d08:	3d 1d       	adc	r19, r13
     d0a:	22 0f       	add	r18, r18
     d0c:	33 1f       	adc	r19, r19
     d0e:	25 5c       	subi	r18, 0xC5	; 197
     d10:	3f 4d       	sbci	r19, 0xDF	; 223
     d12:	88 e0       	ldi	r24, 0x08	; 8
     d14:	f9 01       	movw	r30, r18
     d16:	80 83       	st	Z, r24
     d18:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     d1c:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     d20:	94 60       	ori	r25, 0x04	; 4
     d22:	2e c0       	rjmp	.+92     	; 0xd80 <process_sensor+0x442>
     d24:	ca 01       	movw	r24, r20
     d26:	81 60       	ori	r24, 0x01	; 1
     d28:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     d2c:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     d30:	f9 01       	movw	r30, r18
     d32:	ec 0d       	add	r30, r12
     d34:	fd 1d       	adc	r31, r13
     d36:	ee 0f       	add	r30, r30
     d38:	ff 1f       	adc	r31, r31
     d3a:	e5 5c       	subi	r30, 0xC5	; 197
     d3c:	ff 4d       	sbci	r31, 0xDF	; 223
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	90 91 2f 20 	lds	r25, 0x202F	; 0x80202f <qt_config_data+0x1>
     d44:	89 17       	cp	r24, r25
     d46:	10 f4       	brcc	.+4      	; 0xd4c <process_sensor+0x40e>
     d48:	8f 5f       	subi	r24, 0xFF	; 255
     d4a:	82 83       	std	Z+2, r24	; 0x02
     d4c:	90 91 31 20 	lds	r25, 0x2031	; 0x802031 <qt_config_data+0x3>
     d50:	99 23       	and	r25, r25
     d52:	e1 f0       	breq	.+56     	; 0xd8c <process_sensor+0x44e>
     d54:	f6 01       	movw	r30, r12
     d56:	ee 0f       	add	r30, r30
     d58:	ff 1f       	adc	r31, r31
     d5a:	ec 0d       	add	r30, r12
     d5c:	fd 1d       	adc	r31, r13
     d5e:	ee 0f       	add	r30, r30
     d60:	ff 1f       	adc	r31, r31
     d62:	e5 5c       	subi	r30, 0xC5	; 197
     d64:	ff 4d       	sbci	r31, 0xDF	; 223
     d66:	81 81       	ldd	r24, Z+1	; 0x01
     d68:	89 17       	cp	r24, r25
     d6a:	18 f4       	brcc	.+6      	; 0xd72 <process_sensor+0x434>
     d6c:	81 0f       	add	r24, r17
     d6e:	81 83       	std	Z+1, r24	; 0x01
     d70:	0d c0       	rjmp	.+26     	; 0xd8c <process_sensor+0x44e>
     d72:	80 2f       	mov	r24, r16
     d74:	d0 dd       	rcall	.-1120   	; 0x916 <start_cal_sensor>
     d76:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     d7a:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     d7e:	92 60       	ori	r25, 0x02	; 2
     d80:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     d84:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	01 c0       	rjmp	.+2      	; 0xd8e <process_sensor+0x450>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	90 91 30 20 	lds	r25, 0x2030	; 0x802030 <qt_config_data+0x2>
     d92:	90 93 39 20 	sts	0x2039, r25	; 0x802039 <dht_counter>
     d96:	62 c0       	rjmp	.+196    	; 0xe5c <process_sensor+0x51e>
     d98:	80 91 30 20 	lds	r24, 0x2030	; 0x802030 <qt_config_data+0x2>
     d9c:	80 93 39 20 	sts	0x2039, r24	; 0x802039 <dht_counter>
     da0:	82 81       	ldd	r24, Z+2	; 0x02
     da2:	88 23       	and	r24, r24
     da4:	09 f4       	brne	.+2      	; 0xda8 <process_sensor+0x46a>
     da6:	3f c0       	rjmp	.+126    	; 0xe26 <process_sensor+0x4e8>
     da8:	c4 01       	movw	r24, r8
     daa:	97 fe       	sbrs	r9, 7
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <process_sensor+0x474>
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	20 91 09 20 	lds	r18, 0x2009	; 0x802009 <lib_status_flags>
     db6:	30 91 0a 20 	lds	r19, 0x200A	; 0x80200a <lib_status_flags+0x1>
     dba:	a8 17       	cp	r26, r24
     dbc:	b9 07       	cpc	r27, r25
     dbe:	90 f4       	brcc	.+36     	; 0xde4 <process_sensor+0x4a6>
     dc0:	f6 01       	movw	r30, r12
     dc2:	ee 0f       	add	r30, r30
     dc4:	ff 1f       	adc	r31, r31
     dc6:	ec 0d       	add	r30, r12
     dc8:	fd 1d       	adc	r31, r13
     dca:	ee 0f       	add	r30, r30
     dcc:	ff 1f       	adc	r31, r31
     dce:	e5 5c       	subi	r30, 0xC5	; 197
     dd0:	ff 4d       	sbci	r31, 0xDF	; 223
     dd2:	80 e1       	ldi	r24, 0x10	; 16
     dd4:	80 83       	st	Z, r24
     dd6:	21 60       	ori	r18, 0x01	; 1
     dd8:	20 93 09 20 	sts	0x2009, r18	; 0x802009 <lib_status_flags>
     ddc:	30 93 0a 20 	sts	0x200A, r19	; 0x80200a <lib_status_flags+0x1>
     de0:	80 e0       	ldi	r24, 0x00	; 0
     de2:	06 c0       	rjmp	.+12     	; 0xdf0 <process_sensor+0x4b2>
     de4:	34 60       	ori	r19, 0x04	; 4
     de6:	20 93 09 20 	sts	0x2009, r18	; 0x802009 <lib_status_flags>
     dea:	30 93 0a 20 	sts	0x200A, r19	; 0x80200a <lib_status_flags+0x1>
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	f6 01       	movw	r30, r12
     df2:	ee 0f       	add	r30, r30
     df4:	ff 1f       	adc	r31, r31
     df6:	ec 0d       	add	r30, r12
     df8:	fd 1d       	adc	r31, r13
     dfa:	ee 0f       	add	r30, r30
     dfc:	ff 1f       	adc	r31, r31
     dfe:	e5 5c       	subi	r30, 0xC5	; 197
     e00:	ff 4d       	sbci	r31, 0xDF	; 223
     e02:	92 81       	ldd	r25, Z+2	; 0x02
     e04:	91 50       	subi	r25, 0x01	; 1
     e06:	92 83       	std	Z+2, r25	; 0x02
     e08:	29 c0       	rjmp	.+82     	; 0xe5c <process_sensor+0x51e>
     e0a:	a5 81       	ldd	r26, Z+5	; 0x05
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	a5 59       	subi	r26, 0x95	; 149
     e10:	bf 4d       	sbci	r27, 0xDF	; 223
     e12:	8c 91       	ld	r24, X
     e14:	8f 5f       	subi	r24, 0xFF	; 255
     e16:	8c 93       	st	X, r24
     e18:	22 fd       	sbrc	r18, 2
     e1a:	08 c0       	rjmp	.+16     	; 0xe2c <process_sensor+0x4ee>
     e1c:	87 ff       	sbrs	r24, 7
     e1e:	03 c0       	rjmp	.+6      	; 0xe26 <process_sensor+0x4e8>
     e20:	80 e1       	ldi	r24, 0x10	; 16
     e22:	80 83       	st	Z, r24
     e24:	1a c0       	rjmp	.+52     	; 0xe5a <process_sensor+0x51c>
     e26:	80 2f       	mov	r24, r16
     e28:	58 dd       	rcall	.-1360   	; 0x8da <goto_no_detect>
     e2a:	17 c0       	rjmp	.+46     	; 0xe5a <process_sensor+0x51c>
     e2c:	90 91 34 20 	lds	r25, 0x2034	; 0x802034 <qt_config_data+0x6>
     e30:	89 17       	cp	r24, r25
     e32:	68 f0       	brcs	.+26     	; 0xe4e <process_sensor+0x510>
     e34:	80 2f       	mov	r24, r16
     e36:	6f dd       	rcall	.-1314   	; 0x916 <start_cal_sensor>
     e38:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     e3c:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     e40:	90 61       	ori	r25, 0x10	; 16
     e42:	80 93 09 20 	sts	0x2009, r24	; 0x802009 <lib_status_flags>
     e46:	90 93 0a 20 	sts	0x200A, r25	; 0x80200a <lib_status_flags+0x1>
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	07 c0       	rjmp	.+14     	; 0xe5c <process_sensor+0x51e>
     e4e:	80 91 09 20 	lds	r24, 0x2009	; 0x802009 <lib_status_flags>
     e52:	90 91 0a 20 	lds	r25, 0x200A	; 0x80200a <lib_status_flags+0x1>
     e56:	94 60       	ori	r25, 0x04	; 4
     e58:	f4 cf       	rjmp	.-24     	; 0xe42 <process_sensor+0x504>
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	0f 90       	pop	r0
     e5e:	df 91       	pop	r29
     e60:	cf 91       	pop	r28
     e62:	1f 91       	pop	r17
     e64:	0f 91       	pop	r16
     e66:	ff 90       	pop	r15
     e68:	ef 90       	pop	r14
     e6a:	df 90       	pop	r13
     e6c:	cf 90       	pop	r12
     e6e:	bf 90       	pop	r11
     e70:	9f 90       	pop	r9
     e72:	8f 90       	pop	r8
     e74:	7f 90       	pop	r7
     e76:	6f 90       	pop	r6
     e78:	5f 90       	pop	r5
     e7a:	4f 90       	pop	r4
     e7c:	3f 90       	pop	r3
     e7e:	2f 90       	pop	r2
     e80:	08 95       	ret

00000e82 <get_channel_delta>:
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	fc 01       	movw	r30, r24
     e86:	38 96       	adiw	r30, 0x08	; 8
     e88:	2d e0       	ldi	r18, 0x0D	; 13
     e8a:	30 e2       	ldi	r19, 0x20	; 32
     e8c:	ee 0f       	add	r30, r30
     e8e:	ff 1f       	adc	r31, r31
     e90:	e2 0f       	add	r30, r18
     e92:	f3 1f       	adc	r31, r19
     e94:	dc 01       	movw	r26, r24
     e96:	aa 0f       	add	r26, r26
     e98:	bb 1f       	adc	r27, r27
     e9a:	a2 0f       	add	r26, r18
     e9c:	b3 1f       	adc	r27, r19
     e9e:	80 81       	ld	r24, Z
     ea0:	91 81       	ldd	r25, Z+1	; 0x01
     ea2:	2d 91       	ld	r18, X+
     ea4:	3c 91       	ld	r19, X
     ea6:	11 97       	sbiw	r26, 0x01	; 1
     ea8:	82 1b       	sub	r24, r18
     eaa:	93 0b       	sbc	r25, r19
     eac:	08 95       	ret

00000eae <burst_init>:
     eae:	00 97       	sbiw	r24, 0x00	; 0
     eb0:	11 f0       	breq	.+4      	; 0xeb6 <burst_init+0x8>
     eb2:	fc 01       	movw	r30, r24
     eb4:	19 95       	eicall
     eb6:	08 95       	ret

00000eb8 <burst_reset>:
     eb8:	10 92 77 20 	sts	0x2077, r1	; 0x802077 <SNS_array>
     ebc:	10 92 78 20 	sts	0x2078, r1	; 0x802078 <SNS_array+0x1>
     ec0:	10 92 73 20 	sts	0x2073, r1	; 0x802073 <SNSK_array>
     ec4:	10 92 74 20 	sts	0x2074, r1	; 0x802074 <SNSK_array+0x1>
     ec8:	10 92 79 20 	sts	0x2079, r1	; 0x802079 <SNS_array+0x2>
     ecc:	10 92 7a 20 	sts	0x207A, r1	; 0x80207a <SNS_array+0x3>
     ed0:	10 92 75 20 	sts	0x2075, r1	; 0x802075 <SNSK_array+0x2>
     ed4:	10 92 76 20 	sts	0x2076, r1	; 0x802076 <SNSK_array+0x3>
     ed8:	08 95       	ret

00000eda <burst>:
     eda:	80 91 79 20 	lds	r24, 0x2079	; 0x802079 <SNS_array+0x2>
     ede:	90 91 77 20 	lds	r25, 0x2077	; 0x802077 <SNS_array>
     ee2:	89 2b       	or	r24, r25
     ee4:	41 f0       	breq	.+16     	; 0xef6 <burst+0x1c>
     ee6:	e0 91 07 20 	lds	r30, 0x2007	; 0x802007 <burst_proc>
     eea:	f0 91 08 20 	lds	r31, 0x2008	; 0x802008 <burst_proc+0x1>
     eee:	30 97       	sbiw	r30, 0x00	; 0
     ef0:	11 f0       	breq	.+4      	; 0xef6 <burst+0x1c>
     ef2:	80 e0       	ldi	r24, 0x00	; 0
     ef4:	19 95       	eicall
     ef6:	80 91 7a 20 	lds	r24, 0x207A	; 0x80207a <SNS_array+0x3>
     efa:	90 91 78 20 	lds	r25, 0x2078	; 0x802078 <SNS_array+0x1>
     efe:	89 2b       	or	r24, r25
     f00:	41 f0       	breq	.+16     	; 0xf12 <burst+0x38>
     f02:	e0 91 07 20 	lds	r30, 0x2007	; 0x802007 <burst_proc>
     f06:	f0 91 08 20 	lds	r31, 0x2008	; 0x802008 <burst_proc+0x1>
     f0a:	30 97       	sbiw	r30, 0x00	; 0
     f0c:	11 f0       	breq	.+4      	; 0xf12 <burst+0x38>
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	19 95       	eicall
     f12:	08 95       	ret

00000f14 <main>:
============================================================================*/

int main( void )
{
	/* initialise host app, pins, watchdog, etc */
	init_system();
     f14:	63 d0       	rcall	.+198    	; 0xfdc <init_system>

    /* configure timer ISR to fire regularly */
    init_timer_isr();
     f16:	4a d0       	rcall	.+148    	; 0xfac <init_timer_isr>

	/* Initialize Touch sensors */
	touch_init();
     f18:	fd d5       	rcall	.+3066   	; 0x1b14 <touch_init>

    /* enable interrupts */
    cpu_irq_enable();
     f1a:	78 94       	sei
	
	PORTD.DIR = 0xFF;
     f1c:	8f ef       	ldi	r24, 0xFF	; 255
     f1e:	80 93 60 06 	sts	0x0660, r24	; 0x800660 <__TEXT_REGION_LENGTH__+0x700660>
    {
        touch_measure();
		
		for(i=0; i < 8; i++)
		{
			qmask = (0x01 << i);
     f22:	c1 e0       	ldi	r28, 0x01	; 1
     f24:	d0 e0       	ldi	r29, 0x00	; 0
	int qmask;

    /* loop forever */
    for( ; ; )
    {
        touch_measure();
     f26:	4d d6       	rcall	.+3226   	; 0x1bc2 <touch_measure>
		
		for(i=0; i < 8; i++)
     f28:	20 e0       	ldi	r18, 0x00	; 0
     f2a:	30 e0       	ldi	r19, 0x00	; 0
		{
			qmask = (0x01 << i);
     f2c:	ce 01       	movw	r24, r28
     f2e:	02 2e       	mov	r0, r18
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <main+0x20>
     f32:	88 0f       	add	r24, r24
     f34:	0a 94       	dec	r0
     f36:	ea f7       	brpl	.-6      	; 0xf32 <main+0x1e>
			
			if (GET_SENSOR_STATE(i)){
     f38:	40 91 2d 20 	lds	r20, 0x202D	; 0x80202d <qt_measure_data+0x20>
     f3c:	50 e0       	ldi	r21, 0x00	; 0
     f3e:	02 2e       	mov	r0, r18
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <main+0x32>
     f42:	55 95       	asr	r21
     f44:	47 95       	ror	r20
     f46:	0a 94       	dec	r0
     f48:	e2 f7       	brpl	.-8      	; 0xf42 <main+0x2e>
				PORTD.OUT |= qmask;
     f4a:	90 91 64 06 	lds	r25, 0x0664	; 0x800664 <__TEXT_REGION_LENGTH__+0x700664>
		
		for(i=0; i < 8; i++)
		{
			qmask = (0x01 << i);
			
			if (GET_SENSOR_STATE(i)){
     f4e:	40 ff       	sbrs	r20, 0
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <main+0x42>
				PORTD.OUT |= qmask;
     f52:	89 2b       	or	r24, r25
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <main+0x46>
			}
			else {
				PORTD.OUT &= ~qmask;
     f56:	80 95       	com	r24
     f58:	89 23       	and	r24, r25
     f5a:	80 93 64 06 	sts	0x0664, r24	; 0x800664 <__TEXT_REGION_LENGTH__+0x700664>
    /* loop forever */
    for( ; ; )
    {
        touch_measure();
		
		for(i=0; i < 8; i++)
     f5e:	2f 5f       	subi	r18, 0xFF	; 255
     f60:	3f 4f       	sbci	r19, 0xFF	; 255
     f62:	28 30       	cpi	r18, 0x08	; 8
     f64:	31 05       	cpc	r19, r1
     f66:	11 f7       	brne	.-60     	; 0xf2c <main+0x18>
     f68:	de cf       	rjmp	.-68     	; 0xf26 <main+0x12>

00000f6a <example_cca_interrupt_callback>:
Purpose :   timer ISR to update time info
============================================================================*/
static void
example_cca_interrupt_callback (void)
{
  time_ms_inc += QT_TIMER_PERIOD_MSEC;
     f6a:	80 91 7e 20 	lds	r24, 0x207E	; 0x80207e <time_ms_inc>
     f6e:	90 91 7f 20 	lds	r25, 0x207F	; 0x80207f <time_ms_inc+0x1>
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	80 93 7e 20 	sts	0x207E, r24	; 0x80207e <time_ms_inc>
     f78:	90 93 7f 20 	sts	0x207F, r25	; 0x80207f <time_ms_inc+0x1>

  if(time_ms_inc >= qt_measurement_period_msec)
     f7c:	20 91 01 20 	lds	r18, 0x2001	; 0x802001 <qt_measurement_period_msec>
     f80:	30 91 02 20 	lds	r19, 0x2002	; 0x802002 <qt_measurement_period_msec+0x1>
     f84:	82 17       	cp	r24, r18
     f86:	93 07       	cpc	r25, r19
     f88:	38 f0       	brcs	.+14     	; 0xf98 <example_cca_interrupt_callback+0x2e>
  {
    time_ms_inc =0;
     f8a:	10 92 7e 20 	sts	0x207E, r1	; 0x80207e <time_ms_inc>
     f8e:	10 92 7f 20 	sts	0x207F, r1	; 0x80207f <time_ms_inc+0x1>
   /*  set flag: it's time to measure touch    */
   time_to_measure_touch = 1u;
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	80 93 7d 20 	sts	0x207D, r24	; 0x80207d <time_to_measure_touch>
  else
  {

  }
  /*  update the current time */
   current_time_ms_touch += QT_TIMER_PERIOD_MSEC;
     f98:	80 91 7b 20 	lds	r24, 0x207B	; 0x80207b <current_time_ms_touch>
     f9c:	90 91 7c 20 	lds	r25, 0x207C	; 0x80207c <current_time_ms_touch+0x1>
     fa0:	01 96       	adiw	r24, 0x01	; 1
     fa2:	80 93 7b 20 	sts	0x207B, r24	; 0x80207b <current_time_ms_touch>
     fa6:	90 93 7c 20 	sts	0x207C, r25	; 0x80207c <current_time_ms_touch+0x1>
     faa:	08 95       	ret

00000fac <init_timer_isr>:
Purpose :   configure timer ISR to fire regularly
============================================================================*/

void init_timer_isr( void )
{
  tc_enable (&TCC0);
     fac:	80 e0       	ldi	r24, 0x00	; 0
     fae:	98 e0       	ldi	r25, 0x08	; 8
     fb0:	3e d5       	rcall	.+2684   	; 0x1a2e <tc_enable>
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
     fb2:	e0 e0       	ldi	r30, 0x00	; 0
     fb4:	f8 e0       	ldi	r31, 0x08	; 8
     fb6:	88 ee       	ldi	r24, 0xE8	; 232
     fb8:	93 e0       	ldi	r25, 0x03	; 3
     fba:	86 a3       	std	Z+38, r24	; 0x26
     fbc:	97 a3       	std	Z+39, r25	; 0x27
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
     fbe:	80 81       	ld	r24, Z
 * \note Configuring the clock also starts the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
     fc0:	80 7f       	andi	r24, 0xF0	; 240
     fc2:	84 60       	ori	r24, 0x04	; 4
     fc4:	80 83       	st	Z, r24
 * \note Configures CCAINTLVL in INTCTRLB
 */
static inline void tc_set_cca_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLB = ((TC0_t *)tc)->INTCTRLB & ~TC0_CCAINTLVL_gm;
     fc6:	87 81       	ldd	r24, Z+7	; 0x07
     fc8:	8c 7f       	andi	r24, 0xFC	; 252
     fca:	87 83       	std	Z+7, r24	; 0x07
	((TC0_t *)tc)->INTCTRLB =
			((TC0_t *)tc)->INTCTRLB | (level << TC0_CCAINTLVL_gp);
     fcc:	87 81       	ldd	r24, Z+7	; 0x07
 */
static inline void tc_set_cca_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLB = ((TC0_t *)tc)->INTCTRLB & ~TC0_CCAINTLVL_gm;
	((TC0_t *)tc)->INTCTRLB =
     fce:	81 60       	ori	r24, 0x01	; 1
     fd0:	87 83       	std	Z+7, r24	; 0x07
  tc_write_period (&TCC0, (TICKS_PER_MS * QT_TIMER_PERIOD_MSEC));
  tc_write_clock_source (&TCC0, TC_CLKSEL_DIV8_gc);
  tc_set_cca_interrupt_level (&TCC0, PMIC_LVL_LOW);
  tc_set_cca_interrupt_callback(&TCC0, example_cca_interrupt_callback);
     fd2:	65 eb       	ldi	r22, 0xB5	; 181
     fd4:	77 e0       	ldi	r23, 0x07	; 7
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	98 e0       	ldi	r25, 0x08	; 8
     fda:	69 c5       	rjmp	.+2770   	; 0x1aae <tc_set_cca_interrupt_callback>

00000fdc <init_system>:
 * Enables all interrupt levels, with vectors located in the application section
 * and fixed priority scheduling.
 */
static inline void pmic_init(void)
{
	PMIC.CTRL = PMIC_LVL_LOW | PMIC_LVL_MEDIUM |
     fdc:	87 e0       	ldi	r24, 0x07	; 7
     fde:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
============================================================================*/
void init_system( void )
{
    /* Initialize ASF services */
    pmic_init ();
    sysclk_init();
     fe2:	01 d0       	rcall	.+2      	; 0xfe6 <sysclk_init>
    board_init();
     fe4:	96 c5       	rjmp	.+2860   	; 0x1b12 <board_init>

00000fe6 <sysclk_init>:
#endif
	bool need_rc2mhz = false;

	/* Turn off all peripheral clocks that can be turned off. */
	for (i = 0; i <= SYSCLK_PORT_F; i++) {
		*(reg++) = 0xff;
     fe6:	8f ef       	ldi	r24, 0xFF	; 255
     fe8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     fec:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     ff0:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     ff4:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     ff8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     ffc:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
    1000:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
 * \param psbcdiv The prescaler B and C settings (one of the \c SYSCLK_PSBCDIV_*
 * definitions). These determine the clkPER2, clkPER and clkCPU frequencies.
 */
static inline void sysclk_set_prescalers(uint8_t psadiv, uint8_t psbcdiv)
{
	ccp_write_io((uint8_t *)&CLK.PSCTRL, psadiv | psbcdiv);
    1004:	6c e0       	ldi	r22, 0x0C	; 12
    1006:	81 e4       	ldi	r24, 0x41	; 65
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	7d d5       	rcall	.+2810   	; 0x1b06 <ccp_write_io>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    100c:	9f b7       	in	r25, 0x3f	; 63
	cpu_irq_disable();
    100e:	f8 94       	cli
	irqflags_t flags;

	Assert(id != OSC_ID_USBSOF);

	flags = cpu_irq_save();
	OSC.CTRL |= id;
    1010:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
    1014:	82 60       	ori	r24, 0x02	; 2
    1016:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    101a:	9f bf       	out	0x3f, r25	; 63

static inline bool osc_is_ready(uint8_t id)
{
	Assert(id != OSC_ID_USBSOF);

	return OSC.STATUS & id;
    101c:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
    1020:	81 ff       	sbrs	r24, 1
    1022:	fc cf       	rjmp	.-8      	; 0x101c <sysclk_init+0x36>
		default:
			//unhandled_case(CONFIG_SYSCLK_SOURCE);
			return;
		}

		ccp_write_io((uint8_t *)&CLK.CTRL, CONFIG_SYSCLK_SOURCE);
    1024:	61 e0       	ldi	r22, 0x01	; 1
    1026:	80 e4       	ldi	r24, 0x40	; 64
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	6d d5       	rcall	.+2778   	; 0x1b06 <ccp_write_io>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    102c:	9f b7       	in	r25, 0x3f	; 63
	cpu_irq_disable();
    102e:	f8 94       	cli
	irqflags_t flags;

	Assert(id != OSC_ID_USBSOF);

	flags = cpu_irq_save();
	OSC.CTRL &= ~id;
    1030:	80 91 50 00 	lds	r24, 0x0050	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
    1034:	8e 7f       	andi	r24, 0xFE	; 254
    1036:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    103a:	9f bf       	out	0x3f, r25	; 63
    103c:	08 95       	ret

0000103e <sysclk_enable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    103e:	9f b7       	in	r25, 0x3f	; 63
	cpu_irq_disable();
    1040:	f8 94       	cli

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
    1042:	e8 2f       	mov	r30, r24
    1044:	f0 e0       	ldi	r31, 0x00	; 0
    1046:	e0 59       	subi	r30, 0x90	; 144
    1048:	ff 4f       	sbci	r31, 0xFF	; 255
    104a:	60 95       	com	r22
    104c:	80 81       	ld	r24, Z
    104e:	68 23       	and	r22, r24
    1050:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1052:	9f bf       	out	0x3f, r25	; 63
    1054:	08 95       	ret

00001056 <__vector_14>:
		tc_tce1_err_callback = callback;
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
		tc_tcf0_err_callback = callback;
    1056:	1f 92       	push	r1
    1058:	0f 92       	push	r0
    105a:	0f b6       	in	r0, 0x3f	; 63
    105c:	0f 92       	push	r0
    105e:	11 24       	eor	r1, r1
    1060:	0b b6       	in	r0, 0x3b	; 59
    1062:	0f 92       	push	r0
    1064:	2f 93       	push	r18
    1066:	3f 93       	push	r19
    1068:	4f 93       	push	r20
    106a:	5f 93       	push	r21
    106c:	6f 93       	push	r22
    106e:	7f 93       	push	r23
    1070:	8f 93       	push	r24
    1072:	9f 93       	push	r25
    1074:	af 93       	push	r26
    1076:	bf 93       	push	r27
    1078:	ef 93       	push	r30
    107a:	ff 93       	push	r31
    107c:	e0 91 b6 20 	lds	r30, 0x20B6	; 0x8020b6 <tc_tcc0_ovf_callback>
    1080:	f0 91 b7 20 	lds	r31, 0x20B7	; 0x8020b7 <tc_tcc0_ovf_callback+0x1>
    1084:	30 97       	sbiw	r30, 0x00	; 0
    1086:	09 f0       	breq	.+2      	; 0x108a <__vector_14+0x34>
    1088:	19 95       	eicall
    108a:	ff 91       	pop	r31
    108c:	ef 91       	pop	r30
    108e:	bf 91       	pop	r27
    1090:	af 91       	pop	r26
    1092:	9f 91       	pop	r25
    1094:	8f 91       	pop	r24
    1096:	7f 91       	pop	r23
    1098:	6f 91       	pop	r22
    109a:	5f 91       	pop	r21
    109c:	4f 91       	pop	r20
    109e:	3f 91       	pop	r19
    10a0:	2f 91       	pop	r18
    10a2:	0f 90       	pop	r0
    10a4:	0b be       	out	0x3b, r0	; 59
    10a6:	0f 90       	pop	r0
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	0f 90       	pop	r0
    10ac:	1f 90       	pop	r1
    10ae:	18 95       	reti

000010b0 <__vector_15>:
    10b0:	1f 92       	push	r1
    10b2:	0f 92       	push	r0
    10b4:	0f b6       	in	r0, 0x3f	; 63
    10b6:	0f 92       	push	r0
    10b8:	11 24       	eor	r1, r1
    10ba:	0b b6       	in	r0, 0x3b	; 59
    10bc:	0f 92       	push	r0
    10be:	2f 93       	push	r18
    10c0:	3f 93       	push	r19
    10c2:	4f 93       	push	r20
    10c4:	5f 93       	push	r21
    10c6:	6f 93       	push	r22
    10c8:	7f 93       	push	r23
    10ca:	8f 93       	push	r24
    10cc:	9f 93       	push	r25
    10ce:	af 93       	push	r26
    10d0:	bf 93       	push	r27
    10d2:	ef 93       	push	r30
    10d4:	ff 93       	push	r31
    10d6:	e0 91 b4 20 	lds	r30, 0x20B4	; 0x8020b4 <tc_tcc0_err_callback>
    10da:	f0 91 b5 20 	lds	r31, 0x20B5	; 0x8020b5 <tc_tcc0_err_callback+0x1>
    10de:	30 97       	sbiw	r30, 0x00	; 0
    10e0:	09 f0       	breq	.+2      	; 0x10e4 <__vector_15+0x34>
    10e2:	19 95       	eicall
    10e4:	ff 91       	pop	r31
    10e6:	ef 91       	pop	r30
    10e8:	bf 91       	pop	r27
    10ea:	af 91       	pop	r26
    10ec:	9f 91       	pop	r25
    10ee:	8f 91       	pop	r24
    10f0:	7f 91       	pop	r23
    10f2:	6f 91       	pop	r22
    10f4:	5f 91       	pop	r21
    10f6:	4f 91       	pop	r20
    10f8:	3f 91       	pop	r19
    10fa:	2f 91       	pop	r18
    10fc:	0f 90       	pop	r0
    10fe:	0b be       	out	0x3b, r0	; 59
    1100:	0f 90       	pop	r0
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	0f 90       	pop	r0
    1106:	1f 90       	pop	r1
    1108:	18 95       	reti

0000110a <__vector_16>:
    110a:	1f 92       	push	r1
    110c:	0f 92       	push	r0
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	0f 92       	push	r0
    1112:	11 24       	eor	r1, r1
    1114:	0b b6       	in	r0, 0x3b	; 59
    1116:	0f 92       	push	r0
    1118:	2f 93       	push	r18
    111a:	3f 93       	push	r19
    111c:	4f 93       	push	r20
    111e:	5f 93       	push	r21
    1120:	6f 93       	push	r22
    1122:	7f 93       	push	r23
    1124:	8f 93       	push	r24
    1126:	9f 93       	push	r25
    1128:	af 93       	push	r26
    112a:	bf 93       	push	r27
    112c:	ef 93       	push	r30
    112e:	ff 93       	push	r31
    1130:	e0 91 b2 20 	lds	r30, 0x20B2	; 0x8020b2 <tc_tcc0_cca_callback>
    1134:	f0 91 b3 20 	lds	r31, 0x20B3	; 0x8020b3 <tc_tcc0_cca_callback+0x1>
    1138:	30 97       	sbiw	r30, 0x00	; 0
    113a:	09 f0       	breq	.+2      	; 0x113e <__vector_16+0x34>
    113c:	19 95       	eicall
    113e:	ff 91       	pop	r31
    1140:	ef 91       	pop	r30
    1142:	bf 91       	pop	r27
    1144:	af 91       	pop	r26
    1146:	9f 91       	pop	r25
    1148:	8f 91       	pop	r24
    114a:	7f 91       	pop	r23
    114c:	6f 91       	pop	r22
    114e:	5f 91       	pop	r21
    1150:	4f 91       	pop	r20
    1152:	3f 91       	pop	r19
    1154:	2f 91       	pop	r18
    1156:	0f 90       	pop	r0
    1158:	0b be       	out	0x3b, r0	; 59
    115a:	0f 90       	pop	r0
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	0f 90       	pop	r0
    1160:	1f 90       	pop	r1
    1162:	18 95       	reti

00001164 <__vector_17>:
    1164:	1f 92       	push	r1
    1166:	0f 92       	push	r0
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	0f 92       	push	r0
    116c:	11 24       	eor	r1, r1
    116e:	0b b6       	in	r0, 0x3b	; 59
    1170:	0f 92       	push	r0
    1172:	2f 93       	push	r18
    1174:	3f 93       	push	r19
    1176:	4f 93       	push	r20
    1178:	5f 93       	push	r21
    117a:	6f 93       	push	r22
    117c:	7f 93       	push	r23
    117e:	8f 93       	push	r24
    1180:	9f 93       	push	r25
    1182:	af 93       	push	r26
    1184:	bf 93       	push	r27
    1186:	ef 93       	push	r30
    1188:	ff 93       	push	r31
    118a:	e0 91 b0 20 	lds	r30, 0x20B0	; 0x8020b0 <tc_tcc0_ccb_callback>
    118e:	f0 91 b1 20 	lds	r31, 0x20B1	; 0x8020b1 <tc_tcc0_ccb_callback+0x1>
    1192:	30 97       	sbiw	r30, 0x00	; 0
    1194:	09 f0       	breq	.+2      	; 0x1198 <__vector_17+0x34>
    1196:	19 95       	eicall
    1198:	ff 91       	pop	r31
    119a:	ef 91       	pop	r30
    119c:	bf 91       	pop	r27
    119e:	af 91       	pop	r26
    11a0:	9f 91       	pop	r25
    11a2:	8f 91       	pop	r24
    11a4:	7f 91       	pop	r23
    11a6:	6f 91       	pop	r22
    11a8:	5f 91       	pop	r21
    11aa:	4f 91       	pop	r20
    11ac:	3f 91       	pop	r19
    11ae:	2f 91       	pop	r18
    11b0:	0f 90       	pop	r0
    11b2:	0b be       	out	0x3b, r0	; 59
    11b4:	0f 90       	pop	r0
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	0f 90       	pop	r0
    11ba:	1f 90       	pop	r1
    11bc:	18 95       	reti

000011be <__vector_18>:
    11be:	1f 92       	push	r1
    11c0:	0f 92       	push	r0
    11c2:	0f b6       	in	r0, 0x3f	; 63
    11c4:	0f 92       	push	r0
    11c6:	11 24       	eor	r1, r1
    11c8:	0b b6       	in	r0, 0x3b	; 59
    11ca:	0f 92       	push	r0
    11cc:	2f 93       	push	r18
    11ce:	3f 93       	push	r19
    11d0:	4f 93       	push	r20
    11d2:	5f 93       	push	r21
    11d4:	6f 93       	push	r22
    11d6:	7f 93       	push	r23
    11d8:	8f 93       	push	r24
    11da:	9f 93       	push	r25
    11dc:	af 93       	push	r26
    11de:	bf 93       	push	r27
    11e0:	ef 93       	push	r30
    11e2:	ff 93       	push	r31
    11e4:	e0 91 ae 20 	lds	r30, 0x20AE	; 0x8020ae <tc_tcc0_ccc_callback>
    11e8:	f0 91 af 20 	lds	r31, 0x20AF	; 0x8020af <tc_tcc0_ccc_callback+0x1>
    11ec:	30 97       	sbiw	r30, 0x00	; 0
    11ee:	09 f0       	breq	.+2      	; 0x11f2 <__vector_18+0x34>
    11f0:	19 95       	eicall
    11f2:	ff 91       	pop	r31
    11f4:	ef 91       	pop	r30
    11f6:	bf 91       	pop	r27
    11f8:	af 91       	pop	r26
    11fa:	9f 91       	pop	r25
    11fc:	8f 91       	pop	r24
    11fe:	7f 91       	pop	r23
    1200:	6f 91       	pop	r22
    1202:	5f 91       	pop	r21
    1204:	4f 91       	pop	r20
    1206:	3f 91       	pop	r19
    1208:	2f 91       	pop	r18
    120a:	0f 90       	pop	r0
    120c:	0b be       	out	0x3b, r0	; 59
    120e:	0f 90       	pop	r0
    1210:	0f be       	out	0x3f, r0	; 63
    1212:	0f 90       	pop	r0
    1214:	1f 90       	pop	r1
    1216:	18 95       	reti

00001218 <__vector_19>:
    1218:	1f 92       	push	r1
    121a:	0f 92       	push	r0
    121c:	0f b6       	in	r0, 0x3f	; 63
    121e:	0f 92       	push	r0
    1220:	11 24       	eor	r1, r1
    1222:	0b b6       	in	r0, 0x3b	; 59
    1224:	0f 92       	push	r0
    1226:	2f 93       	push	r18
    1228:	3f 93       	push	r19
    122a:	4f 93       	push	r20
    122c:	5f 93       	push	r21
    122e:	6f 93       	push	r22
    1230:	7f 93       	push	r23
    1232:	8f 93       	push	r24
    1234:	9f 93       	push	r25
    1236:	af 93       	push	r26
    1238:	bf 93       	push	r27
    123a:	ef 93       	push	r30
    123c:	ff 93       	push	r31
    123e:	e0 91 ac 20 	lds	r30, 0x20AC	; 0x8020ac <tc_tcc0_ccd_callback>
    1242:	f0 91 ad 20 	lds	r31, 0x20AD	; 0x8020ad <tc_tcc0_ccd_callback+0x1>
    1246:	30 97       	sbiw	r30, 0x00	; 0
    1248:	09 f0       	breq	.+2      	; 0x124c <__vector_19+0x34>
    124a:	19 95       	eicall
    124c:	ff 91       	pop	r31
    124e:	ef 91       	pop	r30
    1250:	bf 91       	pop	r27
    1252:	af 91       	pop	r26
    1254:	9f 91       	pop	r25
    1256:	8f 91       	pop	r24
    1258:	7f 91       	pop	r23
    125a:	6f 91       	pop	r22
    125c:	5f 91       	pop	r21
    125e:	4f 91       	pop	r20
    1260:	3f 91       	pop	r19
    1262:	2f 91       	pop	r18
    1264:	0f 90       	pop	r0
    1266:	0b be       	out	0x3b, r0	; 59
    1268:	0f 90       	pop	r0
    126a:	0f be       	out	0x3f, r0	; 63
    126c:	0f 90       	pop	r0
    126e:	1f 90       	pop	r1
    1270:	18 95       	reti

00001272 <__vector_20>:
    1272:	1f 92       	push	r1
    1274:	0f 92       	push	r0
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	0f 92       	push	r0
    127a:	11 24       	eor	r1, r1
    127c:	0b b6       	in	r0, 0x3b	; 59
    127e:	0f 92       	push	r0
    1280:	2f 93       	push	r18
    1282:	3f 93       	push	r19
    1284:	4f 93       	push	r20
    1286:	5f 93       	push	r21
    1288:	6f 93       	push	r22
    128a:	7f 93       	push	r23
    128c:	8f 93       	push	r24
    128e:	9f 93       	push	r25
    1290:	af 93       	push	r26
    1292:	bf 93       	push	r27
    1294:	ef 93       	push	r30
    1296:	ff 93       	push	r31
    1298:	e0 91 aa 20 	lds	r30, 0x20AA	; 0x8020aa <tc_tcc1_ovf_callback>
    129c:	f0 91 ab 20 	lds	r31, 0x20AB	; 0x8020ab <tc_tcc1_ovf_callback+0x1>
    12a0:	30 97       	sbiw	r30, 0x00	; 0
    12a2:	09 f0       	breq	.+2      	; 0x12a6 <__vector_20+0x34>
    12a4:	19 95       	eicall
    12a6:	ff 91       	pop	r31
    12a8:	ef 91       	pop	r30
    12aa:	bf 91       	pop	r27
    12ac:	af 91       	pop	r26
    12ae:	9f 91       	pop	r25
    12b0:	8f 91       	pop	r24
    12b2:	7f 91       	pop	r23
    12b4:	6f 91       	pop	r22
    12b6:	5f 91       	pop	r21
    12b8:	4f 91       	pop	r20
    12ba:	3f 91       	pop	r19
    12bc:	2f 91       	pop	r18
    12be:	0f 90       	pop	r0
    12c0:	0b be       	out	0x3b, r0	; 59
    12c2:	0f 90       	pop	r0
    12c4:	0f be       	out	0x3f, r0	; 63
    12c6:	0f 90       	pop	r0
    12c8:	1f 90       	pop	r1
    12ca:	18 95       	reti

000012cc <__vector_21>:
    12cc:	1f 92       	push	r1
    12ce:	0f 92       	push	r0
    12d0:	0f b6       	in	r0, 0x3f	; 63
    12d2:	0f 92       	push	r0
    12d4:	11 24       	eor	r1, r1
    12d6:	0b b6       	in	r0, 0x3b	; 59
    12d8:	0f 92       	push	r0
    12da:	2f 93       	push	r18
    12dc:	3f 93       	push	r19
    12de:	4f 93       	push	r20
    12e0:	5f 93       	push	r21
    12e2:	6f 93       	push	r22
    12e4:	7f 93       	push	r23
    12e6:	8f 93       	push	r24
    12e8:	9f 93       	push	r25
    12ea:	af 93       	push	r26
    12ec:	bf 93       	push	r27
    12ee:	ef 93       	push	r30
    12f0:	ff 93       	push	r31
    12f2:	e0 91 a8 20 	lds	r30, 0x20A8	; 0x8020a8 <tc_tcc1_err_callback>
    12f6:	f0 91 a9 20 	lds	r31, 0x20A9	; 0x8020a9 <tc_tcc1_err_callback+0x1>
    12fa:	30 97       	sbiw	r30, 0x00	; 0
    12fc:	09 f0       	breq	.+2      	; 0x1300 <__vector_21+0x34>
    12fe:	19 95       	eicall
    1300:	ff 91       	pop	r31
    1302:	ef 91       	pop	r30
    1304:	bf 91       	pop	r27
    1306:	af 91       	pop	r26
    1308:	9f 91       	pop	r25
    130a:	8f 91       	pop	r24
    130c:	7f 91       	pop	r23
    130e:	6f 91       	pop	r22
    1310:	5f 91       	pop	r21
    1312:	4f 91       	pop	r20
    1314:	3f 91       	pop	r19
    1316:	2f 91       	pop	r18
    1318:	0f 90       	pop	r0
    131a:	0b be       	out	0x3b, r0	; 59
    131c:	0f 90       	pop	r0
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	0f 90       	pop	r0
    1322:	1f 90       	pop	r1
    1324:	18 95       	reti

00001326 <__vector_22>:
    1326:	1f 92       	push	r1
    1328:	0f 92       	push	r0
    132a:	0f b6       	in	r0, 0x3f	; 63
    132c:	0f 92       	push	r0
    132e:	11 24       	eor	r1, r1
    1330:	0b b6       	in	r0, 0x3b	; 59
    1332:	0f 92       	push	r0
    1334:	2f 93       	push	r18
    1336:	3f 93       	push	r19
    1338:	4f 93       	push	r20
    133a:	5f 93       	push	r21
    133c:	6f 93       	push	r22
    133e:	7f 93       	push	r23
    1340:	8f 93       	push	r24
    1342:	9f 93       	push	r25
    1344:	af 93       	push	r26
    1346:	bf 93       	push	r27
    1348:	ef 93       	push	r30
    134a:	ff 93       	push	r31
    134c:	e0 91 a6 20 	lds	r30, 0x20A6	; 0x8020a6 <tc_tcc1_cca_callback>
    1350:	f0 91 a7 20 	lds	r31, 0x20A7	; 0x8020a7 <tc_tcc1_cca_callback+0x1>
    1354:	30 97       	sbiw	r30, 0x00	; 0
    1356:	09 f0       	breq	.+2      	; 0x135a <__vector_22+0x34>
    1358:	19 95       	eicall
    135a:	ff 91       	pop	r31
    135c:	ef 91       	pop	r30
    135e:	bf 91       	pop	r27
    1360:	af 91       	pop	r26
    1362:	9f 91       	pop	r25
    1364:	8f 91       	pop	r24
    1366:	7f 91       	pop	r23
    1368:	6f 91       	pop	r22
    136a:	5f 91       	pop	r21
    136c:	4f 91       	pop	r20
    136e:	3f 91       	pop	r19
    1370:	2f 91       	pop	r18
    1372:	0f 90       	pop	r0
    1374:	0b be       	out	0x3b, r0	; 59
    1376:	0f 90       	pop	r0
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	0f 90       	pop	r0
    137c:	1f 90       	pop	r1
    137e:	18 95       	reti

00001380 <__vector_23>:
    1380:	1f 92       	push	r1
    1382:	0f 92       	push	r0
    1384:	0f b6       	in	r0, 0x3f	; 63
    1386:	0f 92       	push	r0
    1388:	11 24       	eor	r1, r1
    138a:	0b b6       	in	r0, 0x3b	; 59
    138c:	0f 92       	push	r0
    138e:	2f 93       	push	r18
    1390:	3f 93       	push	r19
    1392:	4f 93       	push	r20
    1394:	5f 93       	push	r21
    1396:	6f 93       	push	r22
    1398:	7f 93       	push	r23
    139a:	8f 93       	push	r24
    139c:	9f 93       	push	r25
    139e:	af 93       	push	r26
    13a0:	bf 93       	push	r27
    13a2:	ef 93       	push	r30
    13a4:	ff 93       	push	r31
    13a6:	e0 91 a4 20 	lds	r30, 0x20A4	; 0x8020a4 <tc_tcc1_ccb_callback>
    13aa:	f0 91 a5 20 	lds	r31, 0x20A5	; 0x8020a5 <tc_tcc1_ccb_callback+0x1>
    13ae:	30 97       	sbiw	r30, 0x00	; 0
    13b0:	09 f0       	breq	.+2      	; 0x13b4 <__vector_23+0x34>
    13b2:	19 95       	eicall
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0b be       	out	0x3b, r0	; 59
    13d0:	0f 90       	pop	r0
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	0f 90       	pop	r0
    13d6:	1f 90       	pop	r1
    13d8:	18 95       	reti

000013da <__vector_77>:
    13da:	1f 92       	push	r1
    13dc:	0f 92       	push	r0
    13de:	0f b6       	in	r0, 0x3f	; 63
    13e0:	0f 92       	push	r0
    13e2:	11 24       	eor	r1, r1
    13e4:	0b b6       	in	r0, 0x3b	; 59
    13e6:	0f 92       	push	r0
    13e8:	2f 93       	push	r18
    13ea:	3f 93       	push	r19
    13ec:	4f 93       	push	r20
    13ee:	5f 93       	push	r21
    13f0:	6f 93       	push	r22
    13f2:	7f 93       	push	r23
    13f4:	8f 93       	push	r24
    13f6:	9f 93       	push	r25
    13f8:	af 93       	push	r26
    13fa:	bf 93       	push	r27
    13fc:	ef 93       	push	r30
    13fe:	ff 93       	push	r31
    1400:	e0 91 a2 20 	lds	r30, 0x20A2	; 0x8020a2 <tc_tcd0_ovf_callback>
    1404:	f0 91 a3 20 	lds	r31, 0x20A3	; 0x8020a3 <tc_tcd0_ovf_callback+0x1>
    1408:	30 97       	sbiw	r30, 0x00	; 0
    140a:	09 f0       	breq	.+2      	; 0x140e <__vector_77+0x34>
    140c:	19 95       	eicall
    140e:	ff 91       	pop	r31
    1410:	ef 91       	pop	r30
    1412:	bf 91       	pop	r27
    1414:	af 91       	pop	r26
    1416:	9f 91       	pop	r25
    1418:	8f 91       	pop	r24
    141a:	7f 91       	pop	r23
    141c:	6f 91       	pop	r22
    141e:	5f 91       	pop	r21
    1420:	4f 91       	pop	r20
    1422:	3f 91       	pop	r19
    1424:	2f 91       	pop	r18
    1426:	0f 90       	pop	r0
    1428:	0b be       	out	0x3b, r0	; 59
    142a:	0f 90       	pop	r0
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	0f 90       	pop	r0
    1430:	1f 90       	pop	r1
    1432:	18 95       	reti

00001434 <__vector_78>:
    1434:	1f 92       	push	r1
    1436:	0f 92       	push	r0
    1438:	0f b6       	in	r0, 0x3f	; 63
    143a:	0f 92       	push	r0
    143c:	11 24       	eor	r1, r1
    143e:	0b b6       	in	r0, 0x3b	; 59
    1440:	0f 92       	push	r0
    1442:	2f 93       	push	r18
    1444:	3f 93       	push	r19
    1446:	4f 93       	push	r20
    1448:	5f 93       	push	r21
    144a:	6f 93       	push	r22
    144c:	7f 93       	push	r23
    144e:	8f 93       	push	r24
    1450:	9f 93       	push	r25
    1452:	af 93       	push	r26
    1454:	bf 93       	push	r27
    1456:	ef 93       	push	r30
    1458:	ff 93       	push	r31
    145a:	e0 91 a0 20 	lds	r30, 0x20A0	; 0x8020a0 <tc_tcd0_err_callback>
    145e:	f0 91 a1 20 	lds	r31, 0x20A1	; 0x8020a1 <tc_tcd0_err_callback+0x1>
    1462:	30 97       	sbiw	r30, 0x00	; 0
    1464:	09 f0       	breq	.+2      	; 0x1468 <__vector_78+0x34>
    1466:	19 95       	eicall
    1468:	ff 91       	pop	r31
    146a:	ef 91       	pop	r30
    146c:	bf 91       	pop	r27
    146e:	af 91       	pop	r26
    1470:	9f 91       	pop	r25
    1472:	8f 91       	pop	r24
    1474:	7f 91       	pop	r23
    1476:	6f 91       	pop	r22
    1478:	5f 91       	pop	r21
    147a:	4f 91       	pop	r20
    147c:	3f 91       	pop	r19
    147e:	2f 91       	pop	r18
    1480:	0f 90       	pop	r0
    1482:	0b be       	out	0x3b, r0	; 59
    1484:	0f 90       	pop	r0
    1486:	0f be       	out	0x3f, r0	; 63
    1488:	0f 90       	pop	r0
    148a:	1f 90       	pop	r1
    148c:	18 95       	reti

0000148e <__vector_79>:
    148e:	1f 92       	push	r1
    1490:	0f 92       	push	r0
    1492:	0f b6       	in	r0, 0x3f	; 63
    1494:	0f 92       	push	r0
    1496:	11 24       	eor	r1, r1
    1498:	0b b6       	in	r0, 0x3b	; 59
    149a:	0f 92       	push	r0
    149c:	2f 93       	push	r18
    149e:	3f 93       	push	r19
    14a0:	4f 93       	push	r20
    14a2:	5f 93       	push	r21
    14a4:	6f 93       	push	r22
    14a6:	7f 93       	push	r23
    14a8:	8f 93       	push	r24
    14aa:	9f 93       	push	r25
    14ac:	af 93       	push	r26
    14ae:	bf 93       	push	r27
    14b0:	ef 93       	push	r30
    14b2:	ff 93       	push	r31
    14b4:	e0 91 9e 20 	lds	r30, 0x209E	; 0x80209e <tc_tcd0_cca_callback>
    14b8:	f0 91 9f 20 	lds	r31, 0x209F	; 0x80209f <tc_tcd0_cca_callback+0x1>
    14bc:	30 97       	sbiw	r30, 0x00	; 0
    14be:	09 f0       	breq	.+2      	; 0x14c2 <__vector_79+0x34>
    14c0:	19 95       	eicall
    14c2:	ff 91       	pop	r31
    14c4:	ef 91       	pop	r30
    14c6:	bf 91       	pop	r27
    14c8:	af 91       	pop	r26
    14ca:	9f 91       	pop	r25
    14cc:	8f 91       	pop	r24
    14ce:	7f 91       	pop	r23
    14d0:	6f 91       	pop	r22
    14d2:	5f 91       	pop	r21
    14d4:	4f 91       	pop	r20
    14d6:	3f 91       	pop	r19
    14d8:	2f 91       	pop	r18
    14da:	0f 90       	pop	r0
    14dc:	0b be       	out	0x3b, r0	; 59
    14de:	0f 90       	pop	r0
    14e0:	0f be       	out	0x3f, r0	; 63
    14e2:	0f 90       	pop	r0
    14e4:	1f 90       	pop	r1
    14e6:	18 95       	reti

000014e8 <__vector_80>:
    14e8:	1f 92       	push	r1
    14ea:	0f 92       	push	r0
    14ec:	0f b6       	in	r0, 0x3f	; 63
    14ee:	0f 92       	push	r0
    14f0:	11 24       	eor	r1, r1
    14f2:	0b b6       	in	r0, 0x3b	; 59
    14f4:	0f 92       	push	r0
    14f6:	2f 93       	push	r18
    14f8:	3f 93       	push	r19
    14fa:	4f 93       	push	r20
    14fc:	5f 93       	push	r21
    14fe:	6f 93       	push	r22
    1500:	7f 93       	push	r23
    1502:	8f 93       	push	r24
    1504:	9f 93       	push	r25
    1506:	af 93       	push	r26
    1508:	bf 93       	push	r27
    150a:	ef 93       	push	r30
    150c:	ff 93       	push	r31
    150e:	e0 91 9c 20 	lds	r30, 0x209C	; 0x80209c <tc_tcd0_ccb_callback>
    1512:	f0 91 9d 20 	lds	r31, 0x209D	; 0x80209d <tc_tcd0_ccb_callback+0x1>
    1516:	30 97       	sbiw	r30, 0x00	; 0
    1518:	09 f0       	breq	.+2      	; 0x151c <__vector_80+0x34>
    151a:	19 95       	eicall
    151c:	ff 91       	pop	r31
    151e:	ef 91       	pop	r30
    1520:	bf 91       	pop	r27
    1522:	af 91       	pop	r26
    1524:	9f 91       	pop	r25
    1526:	8f 91       	pop	r24
    1528:	7f 91       	pop	r23
    152a:	6f 91       	pop	r22
    152c:	5f 91       	pop	r21
    152e:	4f 91       	pop	r20
    1530:	3f 91       	pop	r19
    1532:	2f 91       	pop	r18
    1534:	0f 90       	pop	r0
    1536:	0b be       	out	0x3b, r0	; 59
    1538:	0f 90       	pop	r0
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	0f 90       	pop	r0
    153e:	1f 90       	pop	r1
    1540:	18 95       	reti

00001542 <__vector_81>:
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	0b b6       	in	r0, 0x3b	; 59
    154e:	0f 92       	push	r0
    1550:	2f 93       	push	r18
    1552:	3f 93       	push	r19
    1554:	4f 93       	push	r20
    1556:	5f 93       	push	r21
    1558:	6f 93       	push	r22
    155a:	7f 93       	push	r23
    155c:	8f 93       	push	r24
    155e:	9f 93       	push	r25
    1560:	af 93       	push	r26
    1562:	bf 93       	push	r27
    1564:	ef 93       	push	r30
    1566:	ff 93       	push	r31
    1568:	e0 91 9a 20 	lds	r30, 0x209A	; 0x80209a <tc_tcd0_ccc_callback>
    156c:	f0 91 9b 20 	lds	r31, 0x209B	; 0x80209b <tc_tcd0_ccc_callback+0x1>
    1570:	30 97       	sbiw	r30, 0x00	; 0
    1572:	09 f0       	breq	.+2      	; 0x1576 <__vector_81+0x34>
    1574:	19 95       	eicall
    1576:	ff 91       	pop	r31
    1578:	ef 91       	pop	r30
    157a:	bf 91       	pop	r27
    157c:	af 91       	pop	r26
    157e:	9f 91       	pop	r25
    1580:	8f 91       	pop	r24
    1582:	7f 91       	pop	r23
    1584:	6f 91       	pop	r22
    1586:	5f 91       	pop	r21
    1588:	4f 91       	pop	r20
    158a:	3f 91       	pop	r19
    158c:	2f 91       	pop	r18
    158e:	0f 90       	pop	r0
    1590:	0b be       	out	0x3b, r0	; 59
    1592:	0f 90       	pop	r0
    1594:	0f be       	out	0x3f, r0	; 63
    1596:	0f 90       	pop	r0
    1598:	1f 90       	pop	r1
    159a:	18 95       	reti

0000159c <__vector_82>:
    159c:	1f 92       	push	r1
    159e:	0f 92       	push	r0
    15a0:	0f b6       	in	r0, 0x3f	; 63
    15a2:	0f 92       	push	r0
    15a4:	11 24       	eor	r1, r1
    15a6:	0b b6       	in	r0, 0x3b	; 59
    15a8:	0f 92       	push	r0
    15aa:	2f 93       	push	r18
    15ac:	3f 93       	push	r19
    15ae:	4f 93       	push	r20
    15b0:	5f 93       	push	r21
    15b2:	6f 93       	push	r22
    15b4:	7f 93       	push	r23
    15b6:	8f 93       	push	r24
    15b8:	9f 93       	push	r25
    15ba:	af 93       	push	r26
    15bc:	bf 93       	push	r27
    15be:	ef 93       	push	r30
    15c0:	ff 93       	push	r31
    15c2:	e0 91 98 20 	lds	r30, 0x2098	; 0x802098 <tc_tcd0_ccd_callback>
    15c6:	f0 91 99 20 	lds	r31, 0x2099	; 0x802099 <tc_tcd0_ccd_callback+0x1>
    15ca:	30 97       	sbiw	r30, 0x00	; 0
    15cc:	09 f0       	breq	.+2      	; 0x15d0 <__vector_82+0x34>
    15ce:	19 95       	eicall
    15d0:	ff 91       	pop	r31
    15d2:	ef 91       	pop	r30
    15d4:	bf 91       	pop	r27
    15d6:	af 91       	pop	r26
    15d8:	9f 91       	pop	r25
    15da:	8f 91       	pop	r24
    15dc:	7f 91       	pop	r23
    15de:	6f 91       	pop	r22
    15e0:	5f 91       	pop	r21
    15e2:	4f 91       	pop	r20
    15e4:	3f 91       	pop	r19
    15e6:	2f 91       	pop	r18
    15e8:	0f 90       	pop	r0
    15ea:	0b be       	out	0x3b, r0	; 59
    15ec:	0f 90       	pop	r0
    15ee:	0f be       	out	0x3f, r0	; 63
    15f0:	0f 90       	pop	r0
    15f2:	1f 90       	pop	r1
    15f4:	18 95       	reti

000015f6 <__vector_47>:
    15f6:	1f 92       	push	r1
    15f8:	0f 92       	push	r0
    15fa:	0f b6       	in	r0, 0x3f	; 63
    15fc:	0f 92       	push	r0
    15fe:	11 24       	eor	r1, r1
    1600:	0b b6       	in	r0, 0x3b	; 59
    1602:	0f 92       	push	r0
    1604:	2f 93       	push	r18
    1606:	3f 93       	push	r19
    1608:	4f 93       	push	r20
    160a:	5f 93       	push	r21
    160c:	6f 93       	push	r22
    160e:	7f 93       	push	r23
    1610:	8f 93       	push	r24
    1612:	9f 93       	push	r25
    1614:	af 93       	push	r26
    1616:	bf 93       	push	r27
    1618:	ef 93       	push	r30
    161a:	ff 93       	push	r31
    161c:	e0 91 96 20 	lds	r30, 0x2096	; 0x802096 <tc_tce0_ovf_callback>
    1620:	f0 91 97 20 	lds	r31, 0x2097	; 0x802097 <tc_tce0_ovf_callback+0x1>
    1624:	30 97       	sbiw	r30, 0x00	; 0
    1626:	09 f0       	breq	.+2      	; 0x162a <__vector_47+0x34>
    1628:	19 95       	eicall
    162a:	ff 91       	pop	r31
    162c:	ef 91       	pop	r30
    162e:	bf 91       	pop	r27
    1630:	af 91       	pop	r26
    1632:	9f 91       	pop	r25
    1634:	8f 91       	pop	r24
    1636:	7f 91       	pop	r23
    1638:	6f 91       	pop	r22
    163a:	5f 91       	pop	r21
    163c:	4f 91       	pop	r20
    163e:	3f 91       	pop	r19
    1640:	2f 91       	pop	r18
    1642:	0f 90       	pop	r0
    1644:	0b be       	out	0x3b, r0	; 59
    1646:	0f 90       	pop	r0
    1648:	0f be       	out	0x3f, r0	; 63
    164a:	0f 90       	pop	r0
    164c:	1f 90       	pop	r1
    164e:	18 95       	reti

00001650 <__vector_48>:
    1650:	1f 92       	push	r1
    1652:	0f 92       	push	r0
    1654:	0f b6       	in	r0, 0x3f	; 63
    1656:	0f 92       	push	r0
    1658:	11 24       	eor	r1, r1
    165a:	0b b6       	in	r0, 0x3b	; 59
    165c:	0f 92       	push	r0
    165e:	2f 93       	push	r18
    1660:	3f 93       	push	r19
    1662:	4f 93       	push	r20
    1664:	5f 93       	push	r21
    1666:	6f 93       	push	r22
    1668:	7f 93       	push	r23
    166a:	8f 93       	push	r24
    166c:	9f 93       	push	r25
    166e:	af 93       	push	r26
    1670:	bf 93       	push	r27
    1672:	ef 93       	push	r30
    1674:	ff 93       	push	r31
    1676:	e0 91 94 20 	lds	r30, 0x2094	; 0x802094 <tc_tce0_err_callback>
    167a:	f0 91 95 20 	lds	r31, 0x2095	; 0x802095 <tc_tce0_err_callback+0x1>
    167e:	30 97       	sbiw	r30, 0x00	; 0
    1680:	09 f0       	breq	.+2      	; 0x1684 <__vector_48+0x34>
    1682:	19 95       	eicall
    1684:	ff 91       	pop	r31
    1686:	ef 91       	pop	r30
    1688:	bf 91       	pop	r27
    168a:	af 91       	pop	r26
    168c:	9f 91       	pop	r25
    168e:	8f 91       	pop	r24
    1690:	7f 91       	pop	r23
    1692:	6f 91       	pop	r22
    1694:	5f 91       	pop	r21
    1696:	4f 91       	pop	r20
    1698:	3f 91       	pop	r19
    169a:	2f 91       	pop	r18
    169c:	0f 90       	pop	r0
    169e:	0b be       	out	0x3b, r0	; 59
    16a0:	0f 90       	pop	r0
    16a2:	0f be       	out	0x3f, r0	; 63
    16a4:	0f 90       	pop	r0
    16a6:	1f 90       	pop	r1
    16a8:	18 95       	reti

000016aa <__vector_49>:
    16aa:	1f 92       	push	r1
    16ac:	0f 92       	push	r0
    16ae:	0f b6       	in	r0, 0x3f	; 63
    16b0:	0f 92       	push	r0
    16b2:	11 24       	eor	r1, r1
    16b4:	0b b6       	in	r0, 0x3b	; 59
    16b6:	0f 92       	push	r0
    16b8:	2f 93       	push	r18
    16ba:	3f 93       	push	r19
    16bc:	4f 93       	push	r20
    16be:	5f 93       	push	r21
    16c0:	6f 93       	push	r22
    16c2:	7f 93       	push	r23
    16c4:	8f 93       	push	r24
    16c6:	9f 93       	push	r25
    16c8:	af 93       	push	r26
    16ca:	bf 93       	push	r27
    16cc:	ef 93       	push	r30
    16ce:	ff 93       	push	r31
    16d0:	e0 91 92 20 	lds	r30, 0x2092	; 0x802092 <tc_tce0_cca_callback>
    16d4:	f0 91 93 20 	lds	r31, 0x2093	; 0x802093 <tc_tce0_cca_callback+0x1>
    16d8:	30 97       	sbiw	r30, 0x00	; 0
    16da:	09 f0       	breq	.+2      	; 0x16de <__vector_49+0x34>
    16dc:	19 95       	eicall
    16de:	ff 91       	pop	r31
    16e0:	ef 91       	pop	r30
    16e2:	bf 91       	pop	r27
    16e4:	af 91       	pop	r26
    16e6:	9f 91       	pop	r25
    16e8:	8f 91       	pop	r24
    16ea:	7f 91       	pop	r23
    16ec:	6f 91       	pop	r22
    16ee:	5f 91       	pop	r21
    16f0:	4f 91       	pop	r20
    16f2:	3f 91       	pop	r19
    16f4:	2f 91       	pop	r18
    16f6:	0f 90       	pop	r0
    16f8:	0b be       	out	0x3b, r0	; 59
    16fa:	0f 90       	pop	r0
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	0f 90       	pop	r0
    1700:	1f 90       	pop	r1
    1702:	18 95       	reti

00001704 <__vector_50>:
    1704:	1f 92       	push	r1
    1706:	0f 92       	push	r0
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	0f 92       	push	r0
    170c:	11 24       	eor	r1, r1
    170e:	0b b6       	in	r0, 0x3b	; 59
    1710:	0f 92       	push	r0
    1712:	2f 93       	push	r18
    1714:	3f 93       	push	r19
    1716:	4f 93       	push	r20
    1718:	5f 93       	push	r21
    171a:	6f 93       	push	r22
    171c:	7f 93       	push	r23
    171e:	8f 93       	push	r24
    1720:	9f 93       	push	r25
    1722:	af 93       	push	r26
    1724:	bf 93       	push	r27
    1726:	ef 93       	push	r30
    1728:	ff 93       	push	r31
    172a:	e0 91 90 20 	lds	r30, 0x2090	; 0x802090 <tc_tce0_ccb_callback>
    172e:	f0 91 91 20 	lds	r31, 0x2091	; 0x802091 <tc_tce0_ccb_callback+0x1>
    1732:	30 97       	sbiw	r30, 0x00	; 0
    1734:	09 f0       	breq	.+2      	; 0x1738 <__vector_50+0x34>
    1736:	19 95       	eicall
    1738:	ff 91       	pop	r31
    173a:	ef 91       	pop	r30
    173c:	bf 91       	pop	r27
    173e:	af 91       	pop	r26
    1740:	9f 91       	pop	r25
    1742:	8f 91       	pop	r24
    1744:	7f 91       	pop	r23
    1746:	6f 91       	pop	r22
    1748:	5f 91       	pop	r21
    174a:	4f 91       	pop	r20
    174c:	3f 91       	pop	r19
    174e:	2f 91       	pop	r18
    1750:	0f 90       	pop	r0
    1752:	0b be       	out	0x3b, r0	; 59
    1754:	0f 90       	pop	r0
    1756:	0f be       	out	0x3f, r0	; 63
    1758:	0f 90       	pop	r0
    175a:	1f 90       	pop	r1
    175c:	18 95       	reti

0000175e <__vector_51>:
    175e:	1f 92       	push	r1
    1760:	0f 92       	push	r0
    1762:	0f b6       	in	r0, 0x3f	; 63
    1764:	0f 92       	push	r0
    1766:	11 24       	eor	r1, r1
    1768:	0b b6       	in	r0, 0x3b	; 59
    176a:	0f 92       	push	r0
    176c:	2f 93       	push	r18
    176e:	3f 93       	push	r19
    1770:	4f 93       	push	r20
    1772:	5f 93       	push	r21
    1774:	6f 93       	push	r22
    1776:	7f 93       	push	r23
    1778:	8f 93       	push	r24
    177a:	9f 93       	push	r25
    177c:	af 93       	push	r26
    177e:	bf 93       	push	r27
    1780:	ef 93       	push	r30
    1782:	ff 93       	push	r31
    1784:	e0 91 8e 20 	lds	r30, 0x208E	; 0x80208e <tc_tce0_ccc_callback>
    1788:	f0 91 8f 20 	lds	r31, 0x208F	; 0x80208f <tc_tce0_ccc_callback+0x1>
    178c:	30 97       	sbiw	r30, 0x00	; 0
    178e:	09 f0       	breq	.+2      	; 0x1792 <__vector_51+0x34>
    1790:	19 95       	eicall
    1792:	ff 91       	pop	r31
    1794:	ef 91       	pop	r30
    1796:	bf 91       	pop	r27
    1798:	af 91       	pop	r26
    179a:	9f 91       	pop	r25
    179c:	8f 91       	pop	r24
    179e:	7f 91       	pop	r23
    17a0:	6f 91       	pop	r22
    17a2:	5f 91       	pop	r21
    17a4:	4f 91       	pop	r20
    17a6:	3f 91       	pop	r19
    17a8:	2f 91       	pop	r18
    17aa:	0f 90       	pop	r0
    17ac:	0b be       	out	0x3b, r0	; 59
    17ae:	0f 90       	pop	r0
    17b0:	0f be       	out	0x3f, r0	; 63
    17b2:	0f 90       	pop	r0
    17b4:	1f 90       	pop	r1
    17b6:	18 95       	reti

000017b8 <__vector_52>:
    17b8:	1f 92       	push	r1
    17ba:	0f 92       	push	r0
    17bc:	0f b6       	in	r0, 0x3f	; 63
    17be:	0f 92       	push	r0
    17c0:	11 24       	eor	r1, r1
    17c2:	0b b6       	in	r0, 0x3b	; 59
    17c4:	0f 92       	push	r0
    17c6:	2f 93       	push	r18
    17c8:	3f 93       	push	r19
    17ca:	4f 93       	push	r20
    17cc:	5f 93       	push	r21
    17ce:	6f 93       	push	r22
    17d0:	7f 93       	push	r23
    17d2:	8f 93       	push	r24
    17d4:	9f 93       	push	r25
    17d6:	af 93       	push	r26
    17d8:	bf 93       	push	r27
    17da:	ef 93       	push	r30
    17dc:	ff 93       	push	r31
    17de:	e0 91 8c 20 	lds	r30, 0x208C	; 0x80208c <tc_tce0_ccd_callback>
    17e2:	f0 91 8d 20 	lds	r31, 0x208D	; 0x80208d <tc_tce0_ccd_callback+0x1>
    17e6:	30 97       	sbiw	r30, 0x00	; 0
    17e8:	09 f0       	breq	.+2      	; 0x17ec <__vector_52+0x34>
    17ea:	19 95       	eicall
    17ec:	ff 91       	pop	r31
    17ee:	ef 91       	pop	r30
    17f0:	bf 91       	pop	r27
    17f2:	af 91       	pop	r26
    17f4:	9f 91       	pop	r25
    17f6:	8f 91       	pop	r24
    17f8:	7f 91       	pop	r23
    17fa:	6f 91       	pop	r22
    17fc:	5f 91       	pop	r21
    17fe:	4f 91       	pop	r20
    1800:	3f 91       	pop	r19
    1802:	2f 91       	pop	r18
    1804:	0f 90       	pop	r0
    1806:	0b be       	out	0x3b, r0	; 59
    1808:	0f 90       	pop	r0
    180a:	0f be       	out	0x3f, r0	; 63
    180c:	0f 90       	pop	r0
    180e:	1f 90       	pop	r1
    1810:	18 95       	reti

00001812 <__vector_108>:
    1812:	1f 92       	push	r1
    1814:	0f 92       	push	r0
    1816:	0f b6       	in	r0, 0x3f	; 63
    1818:	0f 92       	push	r0
    181a:	11 24       	eor	r1, r1
    181c:	0b b6       	in	r0, 0x3b	; 59
    181e:	0f 92       	push	r0
    1820:	2f 93       	push	r18
    1822:	3f 93       	push	r19
    1824:	4f 93       	push	r20
    1826:	5f 93       	push	r21
    1828:	6f 93       	push	r22
    182a:	7f 93       	push	r23
    182c:	8f 93       	push	r24
    182e:	9f 93       	push	r25
    1830:	af 93       	push	r26
    1832:	bf 93       	push	r27
    1834:	ef 93       	push	r30
    1836:	ff 93       	push	r31
    1838:	e0 91 8a 20 	lds	r30, 0x208A	; 0x80208a <tc_tcf0_ovf_callback>
    183c:	f0 91 8b 20 	lds	r31, 0x208B	; 0x80208b <tc_tcf0_ovf_callback+0x1>
    1840:	30 97       	sbiw	r30, 0x00	; 0
    1842:	09 f0       	breq	.+2      	; 0x1846 <__vector_108+0x34>
    1844:	19 95       	eicall
    1846:	ff 91       	pop	r31
    1848:	ef 91       	pop	r30
    184a:	bf 91       	pop	r27
    184c:	af 91       	pop	r26
    184e:	9f 91       	pop	r25
    1850:	8f 91       	pop	r24
    1852:	7f 91       	pop	r23
    1854:	6f 91       	pop	r22
    1856:	5f 91       	pop	r21
    1858:	4f 91       	pop	r20
    185a:	3f 91       	pop	r19
    185c:	2f 91       	pop	r18
    185e:	0f 90       	pop	r0
    1860:	0b be       	out	0x3b, r0	; 59
    1862:	0f 90       	pop	r0
    1864:	0f be       	out	0x3f, r0	; 63
    1866:	0f 90       	pop	r0
    1868:	1f 90       	pop	r1
    186a:	18 95       	reti

0000186c <__vector_109>:
    186c:	1f 92       	push	r1
    186e:	0f 92       	push	r0
    1870:	0f b6       	in	r0, 0x3f	; 63
    1872:	0f 92       	push	r0
    1874:	11 24       	eor	r1, r1
    1876:	0b b6       	in	r0, 0x3b	; 59
    1878:	0f 92       	push	r0
    187a:	2f 93       	push	r18
    187c:	3f 93       	push	r19
    187e:	4f 93       	push	r20
    1880:	5f 93       	push	r21
    1882:	6f 93       	push	r22
    1884:	7f 93       	push	r23
    1886:	8f 93       	push	r24
    1888:	9f 93       	push	r25
    188a:	af 93       	push	r26
    188c:	bf 93       	push	r27
    188e:	ef 93       	push	r30
    1890:	ff 93       	push	r31
    1892:	e0 91 88 20 	lds	r30, 0x2088	; 0x802088 <tc_tcf0_err_callback>
    1896:	f0 91 89 20 	lds	r31, 0x2089	; 0x802089 <tc_tcf0_err_callback+0x1>
    189a:	30 97       	sbiw	r30, 0x00	; 0
    189c:	09 f0       	breq	.+2      	; 0x18a0 <__vector_109+0x34>
    189e:	19 95       	eicall
    18a0:	ff 91       	pop	r31
    18a2:	ef 91       	pop	r30
    18a4:	bf 91       	pop	r27
    18a6:	af 91       	pop	r26
    18a8:	9f 91       	pop	r25
    18aa:	8f 91       	pop	r24
    18ac:	7f 91       	pop	r23
    18ae:	6f 91       	pop	r22
    18b0:	5f 91       	pop	r21
    18b2:	4f 91       	pop	r20
    18b4:	3f 91       	pop	r19
    18b6:	2f 91       	pop	r18
    18b8:	0f 90       	pop	r0
    18ba:	0b be       	out	0x3b, r0	; 59
    18bc:	0f 90       	pop	r0
    18be:	0f be       	out	0x3f, r0	; 63
    18c0:	0f 90       	pop	r0
    18c2:	1f 90       	pop	r1
    18c4:	18 95       	reti

000018c6 <__vector_110>:
    18c6:	1f 92       	push	r1
    18c8:	0f 92       	push	r0
    18ca:	0f b6       	in	r0, 0x3f	; 63
    18cc:	0f 92       	push	r0
    18ce:	11 24       	eor	r1, r1
    18d0:	0b b6       	in	r0, 0x3b	; 59
    18d2:	0f 92       	push	r0
    18d4:	2f 93       	push	r18
    18d6:	3f 93       	push	r19
    18d8:	4f 93       	push	r20
    18da:	5f 93       	push	r21
    18dc:	6f 93       	push	r22
    18de:	7f 93       	push	r23
    18e0:	8f 93       	push	r24
    18e2:	9f 93       	push	r25
    18e4:	af 93       	push	r26
    18e6:	bf 93       	push	r27
    18e8:	ef 93       	push	r30
    18ea:	ff 93       	push	r31
    18ec:	e0 91 86 20 	lds	r30, 0x2086	; 0x802086 <tc_tcf0_cca_callback>
    18f0:	f0 91 87 20 	lds	r31, 0x2087	; 0x802087 <tc_tcf0_cca_callback+0x1>
    18f4:	30 97       	sbiw	r30, 0x00	; 0
    18f6:	09 f0       	breq	.+2      	; 0x18fa <__vector_110+0x34>
    18f8:	19 95       	eicall
    18fa:	ff 91       	pop	r31
    18fc:	ef 91       	pop	r30
    18fe:	bf 91       	pop	r27
    1900:	af 91       	pop	r26
    1902:	9f 91       	pop	r25
    1904:	8f 91       	pop	r24
    1906:	7f 91       	pop	r23
    1908:	6f 91       	pop	r22
    190a:	5f 91       	pop	r21
    190c:	4f 91       	pop	r20
    190e:	3f 91       	pop	r19
    1910:	2f 91       	pop	r18
    1912:	0f 90       	pop	r0
    1914:	0b be       	out	0x3b, r0	; 59
    1916:	0f 90       	pop	r0
    1918:	0f be       	out	0x3f, r0	; 63
    191a:	0f 90       	pop	r0
    191c:	1f 90       	pop	r1
    191e:	18 95       	reti

00001920 <__vector_111>:
    1920:	1f 92       	push	r1
    1922:	0f 92       	push	r0
    1924:	0f b6       	in	r0, 0x3f	; 63
    1926:	0f 92       	push	r0
    1928:	11 24       	eor	r1, r1
    192a:	0b b6       	in	r0, 0x3b	; 59
    192c:	0f 92       	push	r0
    192e:	2f 93       	push	r18
    1930:	3f 93       	push	r19
    1932:	4f 93       	push	r20
    1934:	5f 93       	push	r21
    1936:	6f 93       	push	r22
    1938:	7f 93       	push	r23
    193a:	8f 93       	push	r24
    193c:	9f 93       	push	r25
    193e:	af 93       	push	r26
    1940:	bf 93       	push	r27
    1942:	ef 93       	push	r30
    1944:	ff 93       	push	r31
    1946:	e0 91 84 20 	lds	r30, 0x2084	; 0x802084 <tc_tcf0_ccb_callback>
    194a:	f0 91 85 20 	lds	r31, 0x2085	; 0x802085 <tc_tcf0_ccb_callback+0x1>
    194e:	30 97       	sbiw	r30, 0x00	; 0
    1950:	09 f0       	breq	.+2      	; 0x1954 <__vector_111+0x34>
    1952:	19 95       	eicall
    1954:	ff 91       	pop	r31
    1956:	ef 91       	pop	r30
    1958:	bf 91       	pop	r27
    195a:	af 91       	pop	r26
    195c:	9f 91       	pop	r25
    195e:	8f 91       	pop	r24
    1960:	7f 91       	pop	r23
    1962:	6f 91       	pop	r22
    1964:	5f 91       	pop	r21
    1966:	4f 91       	pop	r20
    1968:	3f 91       	pop	r19
    196a:	2f 91       	pop	r18
    196c:	0f 90       	pop	r0
    196e:	0b be       	out	0x3b, r0	; 59
    1970:	0f 90       	pop	r0
    1972:	0f be       	out	0x3f, r0	; 63
    1974:	0f 90       	pop	r0
    1976:	1f 90       	pop	r1
    1978:	18 95       	reti

0000197a <__vector_112>:
    197a:	1f 92       	push	r1
    197c:	0f 92       	push	r0
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	0f 92       	push	r0
    1982:	11 24       	eor	r1, r1
    1984:	0b b6       	in	r0, 0x3b	; 59
    1986:	0f 92       	push	r0
    1988:	2f 93       	push	r18
    198a:	3f 93       	push	r19
    198c:	4f 93       	push	r20
    198e:	5f 93       	push	r21
    1990:	6f 93       	push	r22
    1992:	7f 93       	push	r23
    1994:	8f 93       	push	r24
    1996:	9f 93       	push	r25
    1998:	af 93       	push	r26
    199a:	bf 93       	push	r27
    199c:	ef 93       	push	r30
    199e:	ff 93       	push	r31
    19a0:	e0 91 82 20 	lds	r30, 0x2082	; 0x802082 <tc_tcf0_ccc_callback>
    19a4:	f0 91 83 20 	lds	r31, 0x2083	; 0x802083 <tc_tcf0_ccc_callback+0x1>
    19a8:	30 97       	sbiw	r30, 0x00	; 0
    19aa:	09 f0       	breq	.+2      	; 0x19ae <__vector_112+0x34>
    19ac:	19 95       	eicall
    19ae:	ff 91       	pop	r31
    19b0:	ef 91       	pop	r30
    19b2:	bf 91       	pop	r27
    19b4:	af 91       	pop	r26
    19b6:	9f 91       	pop	r25
    19b8:	8f 91       	pop	r24
    19ba:	7f 91       	pop	r23
    19bc:	6f 91       	pop	r22
    19be:	5f 91       	pop	r21
    19c0:	4f 91       	pop	r20
    19c2:	3f 91       	pop	r19
    19c4:	2f 91       	pop	r18
    19c6:	0f 90       	pop	r0
    19c8:	0b be       	out	0x3b, r0	; 59
    19ca:	0f 90       	pop	r0
    19cc:	0f be       	out	0x3f, r0	; 63
    19ce:	0f 90       	pop	r0
    19d0:	1f 90       	pop	r1
    19d2:	18 95       	reti

000019d4 <__vector_113>:
    19d4:	1f 92       	push	r1
    19d6:	0f 92       	push	r0
    19d8:	0f b6       	in	r0, 0x3f	; 63
    19da:	0f 92       	push	r0
    19dc:	11 24       	eor	r1, r1
    19de:	0b b6       	in	r0, 0x3b	; 59
    19e0:	0f 92       	push	r0
    19e2:	2f 93       	push	r18
    19e4:	3f 93       	push	r19
    19e6:	4f 93       	push	r20
    19e8:	5f 93       	push	r21
    19ea:	6f 93       	push	r22
    19ec:	7f 93       	push	r23
    19ee:	8f 93       	push	r24
    19f0:	9f 93       	push	r25
    19f2:	af 93       	push	r26
    19f4:	bf 93       	push	r27
    19f6:	ef 93       	push	r30
    19f8:	ff 93       	push	r31
    19fa:	e0 91 80 20 	lds	r30, 0x2080	; 0x802080 <tc_tcf0_ccd_callback>
    19fe:	f0 91 81 20 	lds	r31, 0x2081	; 0x802081 <tc_tcf0_ccd_callback+0x1>
    1a02:	30 97       	sbiw	r30, 0x00	; 0
    1a04:	09 f0       	breq	.+2      	; 0x1a08 <__vector_113+0x34>
    1a06:	19 95       	eicall
    1a08:	ff 91       	pop	r31
    1a0a:	ef 91       	pop	r30
    1a0c:	bf 91       	pop	r27
    1a0e:	af 91       	pop	r26
    1a10:	9f 91       	pop	r25
    1a12:	8f 91       	pop	r24
    1a14:	7f 91       	pop	r23
    1a16:	6f 91       	pop	r22
    1a18:	5f 91       	pop	r21
    1a1a:	4f 91       	pop	r20
    1a1c:	3f 91       	pop	r19
    1a1e:	2f 91       	pop	r18
    1a20:	0f 90       	pop	r0
    1a22:	0b be       	out	0x3b, r0	; 59
    1a24:	0f 90       	pop	r0
    1a26:	0f be       	out	0x3f, r0	; 63
    1a28:	0f 90       	pop	r0
    1a2a:	1f 90       	pop	r1
    1a2c:	18 95       	reti

00001a2e <tc_enable>:
    1a2e:	cf 93       	push	r28
    1a30:	cf b7       	in	r28, 0x3f	; 63
    1a32:	f8 94       	cli
    1a34:	81 15       	cp	r24, r1
    1a36:	28 e0       	ldi	r18, 0x08	; 8
    1a38:	92 07       	cpc	r25, r18
    1a3a:	11 f4       	brne	.+4      	; 0x1a40 <tc_enable+0x12>
    1a3c:	61 e0       	ldi	r22, 0x01	; 1
    1a3e:	05 c0       	rjmp	.+10     	; 0x1a4a <tc_enable+0x1c>
    1a40:	80 34       	cpi	r24, 0x40	; 64
    1a42:	28 e0       	ldi	r18, 0x08	; 8
    1a44:	92 07       	cpc	r25, r18
    1a46:	31 f4       	brne	.+12     	; 0x1a54 <tc_enable+0x26>
    1a48:	62 e0       	ldi	r22, 0x02	; 2
    1a4a:	83 e0       	ldi	r24, 0x03	; 3
    1a4c:	f8 da       	rcall	.-2576   	; 0x103e <sysclk_enable_module>
    1a4e:	64 e0       	ldi	r22, 0x04	; 4
    1a50:	83 e0       	ldi	r24, 0x03	; 3
    1a52:	1c c0       	rjmp	.+56     	; 0x1a8c <tc_enable+0x5e>
    1a54:	81 15       	cp	r24, r1
    1a56:	29 e0       	ldi	r18, 0x09	; 9
    1a58:	92 07       	cpc	r25, r18
    1a5a:	31 f4       	brne	.+12     	; 0x1a68 <tc_enable+0x3a>
    1a5c:	61 e0       	ldi	r22, 0x01	; 1
    1a5e:	84 e0       	ldi	r24, 0x04	; 4
    1a60:	ee da       	rcall	.-2596   	; 0x103e <sysclk_enable_module>
    1a62:	64 e0       	ldi	r22, 0x04	; 4
    1a64:	84 e0       	ldi	r24, 0x04	; 4
    1a66:	12 c0       	rjmp	.+36     	; 0x1a8c <tc_enable+0x5e>
    1a68:	81 15       	cp	r24, r1
    1a6a:	2a e0       	ldi	r18, 0x0A	; 10
    1a6c:	92 07       	cpc	r25, r18
    1a6e:	31 f4       	brne	.+12     	; 0x1a7c <tc_enable+0x4e>
    1a70:	61 e0       	ldi	r22, 0x01	; 1
    1a72:	85 e0       	ldi	r24, 0x05	; 5
    1a74:	e4 da       	rcall	.-2616   	; 0x103e <sysclk_enable_module>
    1a76:	64 e0       	ldi	r22, 0x04	; 4
    1a78:	85 e0       	ldi	r24, 0x05	; 5
    1a7a:	08 c0       	rjmp	.+16     	; 0x1a8c <tc_enable+0x5e>
    1a7c:	81 15       	cp	r24, r1
    1a7e:	9b 40       	sbci	r25, 0x0B	; 11
    1a80:	99 f4       	brne	.+38     	; 0x1aa8 <tc_enable+0x7a>
    1a82:	61 e0       	ldi	r22, 0x01	; 1
    1a84:	86 e0       	ldi	r24, 0x06	; 6
    1a86:	db da       	rcall	.-2634   	; 0x103e <sysclk_enable_module>
    1a88:	64 e0       	ldi	r22, 0x04	; 4
    1a8a:	86 e0       	ldi	r24, 0x06	; 6
    1a8c:	d8 da       	rcall	.-2640   	; 0x103e <sysclk_enable_module>
    1a8e:	80 91 bd 20 	lds	r24, 0x20BD	; 0x8020bd <sleepmgr_locks+0x1>
    1a92:	8f 3f       	cpi	r24, 0xFF	; 255
    1a94:	09 f4       	brne	.+2      	; 0x1a98 <tc_enable+0x6a>
    1a96:	ff cf       	rjmp	.-2      	; 0x1a96 <tc_enable+0x68>
    1a98:	9f b7       	in	r25, 0x3f	; 63
    1a9a:	f8 94       	cli
    1a9c:	80 91 bd 20 	lds	r24, 0x20BD	; 0x8020bd <sleepmgr_locks+0x1>
    1aa0:	8f 5f       	subi	r24, 0xFF	; 255
    1aa2:	80 93 bd 20 	sts	0x20BD, r24	; 0x8020bd <sleepmgr_locks+0x1>
    1aa6:	9f bf       	out	0x3f, r25	; 63
    1aa8:	cf bf       	out	0x3f, r28	; 63
    1aaa:	cf 91       	pop	r28
    1aac:	08 95       	ret

00001aae <tc_set_cca_interrupt_callback>:
}

void tc_set_cca_interrupt_callback(volatile void *tc, tc_callback_t callback)
{
#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
    1aae:	81 15       	cp	r24, r1
    1ab0:	28 e0       	ldi	r18, 0x08	; 8
    1ab2:	92 07       	cpc	r25, r18
    1ab4:	29 f4       	brne	.+10     	; 0x1ac0 <tc_set_cca_interrupt_callback+0x12>
		tc_tcc0_cca_callback = callback;
    1ab6:	60 93 b2 20 	sts	0x20B2, r22	; 0x8020b2 <tc_tcc0_cca_callback>
    1aba:	70 93 b3 20 	sts	0x20B3, r23	; 0x8020b3 <tc_tcc0_cca_callback+0x1>
    1abe:	08 95       	ret
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
    1ac0:	80 34       	cpi	r24, 0x40	; 64
    1ac2:	28 e0       	ldi	r18, 0x08	; 8
    1ac4:	92 07       	cpc	r25, r18
    1ac6:	29 f4       	brne	.+10     	; 0x1ad2 <tc_set_cca_interrupt_callback+0x24>
		tc_tcc1_cca_callback = callback;
    1ac8:	60 93 a6 20 	sts	0x20A6, r22	; 0x8020a6 <tc_tcc1_cca_callback>
    1acc:	70 93 a7 20 	sts	0x20A7, r23	; 0x8020a7 <tc_tcc1_cca_callback+0x1>
    1ad0:	08 95       	ret
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
    1ad2:	81 15       	cp	r24, r1
    1ad4:	29 e0       	ldi	r18, 0x09	; 9
    1ad6:	92 07       	cpc	r25, r18
    1ad8:	29 f4       	brne	.+10     	; 0x1ae4 <tc_set_cca_interrupt_callback+0x36>
		tc_tcd0_cca_callback = callback;
    1ada:	60 93 9e 20 	sts	0x209E, r22	; 0x80209e <tc_tcd0_cca_callback>
    1ade:	70 93 9f 20 	sts	0x209F, r23	; 0x80209f <tc_tcd0_cca_callback+0x1>
    1ae2:	08 95       	ret
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
		tc_tcd1_cca_callback = callback;
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
    1ae4:	81 15       	cp	r24, r1
    1ae6:	2a e0       	ldi	r18, 0x0A	; 10
    1ae8:	92 07       	cpc	r25, r18
    1aea:	29 f4       	brne	.+10     	; 0x1af6 <tc_set_cca_interrupt_callback+0x48>
		tc_tce0_cca_callback = callback;
    1aec:	60 93 92 20 	sts	0x2092, r22	; 0x802092 <tc_tce0_cca_callback>
    1af0:	70 93 93 20 	sts	0x2093, r23	; 0x802093 <tc_tce0_cca_callback+0x1>
    1af4:	08 95       	ret
	if ((uintptr_t) tc == (uintptr_t) & TCE1) {
		tc_tce1_cca_callback = callback;
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
    1af6:	81 15       	cp	r24, r1
    1af8:	9b 40       	sbci	r25, 0x0B	; 11
    1afa:	21 f4       	brne	.+8      	; 0x1b04 <tc_set_cca_interrupt_callback+0x56>
		tc_tcf0_cca_callback = callback;
    1afc:	60 93 86 20 	sts	0x2086, r22	; 0x802086 <tc_tcf0_cca_callback>
    1b00:	70 93 87 20 	sts	0x2087, r23	; 0x802087 <tc_tcf0_cca_callback+0x1>
    1b04:	08 95       	ret

00001b06 <ccp_write_io>:

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
    1b06:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
    1b08:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
    1b0a:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
    1b0c:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
    1b0e:	60 83       	st	Z, r22
	ret                             // Return to caller
    1b10:	08 95       	ret

00001b12 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
    1b12:	08 95       	ret

00001b14 <touch_init>:
#define SNS2	B
#define SNSK2	B


	#ifdef QTOUCH_STUDIO_MASKS
	SNS_array[0][0]= 0x55;
    1b14:	e7 e7       	ldi	r30, 0x77	; 119
    1b16:	f0 e2       	ldi	r31, 0x20	; 32
    1b18:	85 e5       	ldi	r24, 0x55	; 85
    1b1a:	80 83       	st	Z, r24
	SNS_array[0][1]= 0x0;
    1b1c:	11 82       	std	Z+1, r1	; 0x01
	SNS_array[1][0]= 0x55;
    1b1e:	82 83       	std	Z+2, r24	; 0x02
	SNS_array[1][1]= 0x0;
    1b20:	13 82       	std	Z+3, r1	; 0x03

	SNSK_array[0][0]= 0xaa;
    1b22:	e3 e7       	ldi	r30, 0x73	; 115
    1b24:	f0 e2       	ldi	r31, 0x20	; 32
    1b26:	8a ea       	ldi	r24, 0xAA	; 170
    1b28:	80 83       	st	Z, r24
	SNSK_array[0][1]= 0x0;
    1b2a:	11 82       	std	Z+1, r1	; 0x01
	SNSK_array[1][0]= 0xaa;
    1b2c:	82 83       	std	Z+2, r24	; 0x02
	SNSK_array[1][1]= 0x0;
    1b2e:	13 82       	std	Z+3, r1	; 0x03
Output  :   n/a
Notes   :   Generated code from QTouch Studio. Do not change
============================================================================*/
static void config_sensors(void)
{
	qt_enable_key( CHANNEL_0, NO_AKS_GROUP, 50u, HYST_25 );
    1b30:	21 e0       	ldi	r18, 0x01	; 1
    1b32:	42 e3       	ldi	r20, 0x32	; 50
    1b34:	60 e0       	ldi	r22, 0x00	; 0
    1b36:	80 e0       	ldi	r24, 0x00	; 0
    1b38:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_1, NO_AKS_GROUP, 50u, HYST_25 );
    1b3c:	21 e0       	ldi	r18, 0x01	; 1
    1b3e:	42 e3       	ldi	r20, 0x32	; 50
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	81 e0       	ldi	r24, 0x01	; 1
    1b44:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_2, NO_AKS_GROUP, 50u, HYST_25 );
    1b48:	21 e0       	ldi	r18, 0x01	; 1
    1b4a:	42 e3       	ldi	r20, 0x32	; 50
    1b4c:	60 e0       	ldi	r22, 0x00	; 0
    1b4e:	82 e0       	ldi	r24, 0x02	; 2
    1b50:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_3, NO_AKS_GROUP, 50u, HYST_25 );
    1b54:	21 e0       	ldi	r18, 0x01	; 1
    1b56:	42 e3       	ldi	r20, 0x32	; 50
    1b58:	60 e0       	ldi	r22, 0x00	; 0
    1b5a:	83 e0       	ldi	r24, 0x03	; 3
    1b5c:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_4, NO_AKS_GROUP, 50u, HYST_25 );
    1b60:	21 e0       	ldi	r18, 0x01	; 1
    1b62:	42 e3       	ldi	r20, 0x32	; 50
    1b64:	60 e0       	ldi	r22, 0x00	; 0
    1b66:	84 e0       	ldi	r24, 0x04	; 4
    1b68:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_5, NO_AKS_GROUP, 50u, HYST_25 );
    1b6c:	21 e0       	ldi	r18, 0x01	; 1
    1b6e:	42 e3       	ldi	r20, 0x32	; 50
    1b70:	60 e0       	ldi	r22, 0x00	; 0
    1b72:	85 e0       	ldi	r24, 0x05	; 5
    1b74:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_6, NO_AKS_GROUP, 50u, HYST_25 );
    1b78:	21 e0       	ldi	r18, 0x01	; 1
    1b7a:	42 e3       	ldi	r20, 0x32	; 50
    1b7c:	60 e0       	ldi	r22, 0x00	; 0
    1b7e:	86 e0       	ldi	r24, 0x06	; 6
    1b80:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>
	qt_enable_key( CHANNEL_7, NO_AKS_GROUP, 50u, HYST_25 );
    1b84:	21 e0       	ldi	r18, 0x01	; 1
    1b86:	42 e3       	ldi	r20, 0x32	; 50
    1b88:	60 e0       	ldi	r22, 0x00	; 0
    1b8a:	87 e0       	ldi	r24, 0x07	; 7
    1b8c:	0e 94 01 04 	call	0x802	; 0x802 <qt_enable_key>

    /* Configure the Sensors as keys or Keys With Rotor/Sliders in this function */
    config_sensors();

    /* initialise touch sensing */
    qt_init_sensing();
    1b90:	60 e0       	ldi	r22, 0x00	; 0
    1b92:	70 e0       	ldi	r23, 0x00	; 0
    1b94:	81 e6       	ldi	r24, 0x61	; 97
    1b96:	91 e0       	ldi	r25, 0x01	; 1
    1b98:	0e 94 37 03 	call	0x66e	; 0x66e <qt_init_sensing_with_burst>

static void qt_set_parameters( void )
{

/*  This will be modified by the user to different values   */
qt_config_data.qt_di              = 4;
    1b9c:	ee e2       	ldi	r30, 0x2E	; 46
    1b9e:	f0 e2       	ldi	r31, 0x20	; 32
    1ba0:	84 e0       	ldi	r24, 0x04	; 4
    1ba2:	81 83       	std	Z+1, r24	; 0x01
qt_config_data.qt_neg_drift_rate  = 20;
    1ba4:	84 e1       	ldi	r24, 0x14	; 20
    1ba6:	84 83       	std	Z+4, r24	; 0x04
qt_config_data.qt_pos_drift_rate  = 5;
    1ba8:	95 e0       	ldi	r25, 0x05	; 5
    1baa:	95 83       	std	Z+5, r25	; 0x05
qt_config_data.qt_max_on_duration = 255;
    1bac:	9f ef       	ldi	r25, 0xFF	; 255
    1bae:	93 83       	std	Z+3, r25	; 0x03
qt_config_data.qt_drift_hold_time = 20;
    1bb0:	82 83       	std	Z+2, r24	; 0x02
qt_config_data.qt_recal_threshold = 0;
    1bb2:	10 82       	st	Z, r1
qt_config_data.qt_pos_recal_delay = 10;
    1bb4:	8a e0       	ldi	r24, 0x0A	; 10
    1bb6:	86 83       	std	Z+6, r24	; 0x06
    *   but before it has processed them. The user can use this hook to apply filter
    *   functions to the measured signal values.(Possibly to fix sensor layout faults)    */
       #ifdef _DEBUG_INTERFACE_
            qt_filter_callback = &set_timestamp1;
       #else
            qt_filter_callback = 0;
    1bb8:	10 92 0b 20 	sts	0x200B, r1	; 0x80200b <qt_filter_callback>
    1bbc:	10 92 0c 20 	sts	0x200C, r1	; 0x80200c <qt_filter_callback+0x1>
    1bc0:	08 95       	ret

00001bc2 <touch_measure>:

	/*status flags to indicate the re-burst for library*/
    static uint16_t status_flag = 0u;
    static uint16_t burst_flag = 0u;

	  if( time_to_measure_touch )
    1bc2:	80 91 7d 20 	lds	r24, 0x207D	; 0x80207d <time_to_measure_touch>
    1bc6:	88 23       	and	r24, r24
    1bc8:	a1 f0       	breq	.+40     	; 0x1bf2 <touch_measure+0x30>
        {

            /*  clear flag: it's time to measure touch  */
            time_to_measure_touch = 0u;
    1bca:	10 92 7d 20 	sts	0x207D, r1	; 0x80207d <time_to_measure_touch>
				#ifdef _DEBUG_INTERFACE_
				    TIMESTAMP0;
				#endif

                /*  one time measure touch sensors    */
                status_flag = qt_measure_sensors( current_time_ms_touch );
    1bce:	80 91 7b 20 	lds	r24, 0x207B	; 0x80207b <current_time_ms_touch>
    1bd2:	90 91 7c 20 	lds	r25, 0x207C	; 0x80207c <current_time_ms_touch+0x1>
    1bd6:	0e 94 89 03 	call	0x712	; 0x712 <qt_measure_sensors>
    1bda:	80 93 ba 20 	sts	0x20BA, r24	; 0x8020ba <status_flag.3726>
    1bde:	90 93 bb 20 	sts	0x20BB, r25	; 0x8020bb <status_flag.3726+0x1>

				#ifdef _DEBUG_INTERFACE_
				    TIMESTAMP2;
				#endif

                burst_flag = status_flag & QTLIB_BURST_AGAIN;
    1be2:	88 27       	eor	r24, r24
    1be4:	91 70       	andi	r25, 0x01	; 1
    1be6:	80 93 b8 20 	sts	0x20B8, r24	; 0x8020b8 <burst_flag.3727>
    1bea:	90 93 b9 20 	sts	0x20B9, r25	; 0x8020b9 <burst_flag.3727+0x1>
			        TIMESTAMP3;
			    #endif

                /* Time-critical host application code goes here */

            }while (burst_flag) ;
    1bee:	89 2b       	or	r24, r25
    1bf0:	71 f7       	brne	.-36     	; 0x1bce <touch_measure+0xc>
    1bf2:	08 95       	ret

00001bf4 <__prologue_saves__>:
    1bf4:	2f 92       	push	r2
    1bf6:	3f 92       	push	r3
    1bf8:	4f 92       	push	r4
    1bfa:	5f 92       	push	r5
    1bfc:	6f 92       	push	r6
    1bfe:	7f 92       	push	r7
    1c00:	8f 92       	push	r8
    1c02:	9f 92       	push	r9
    1c04:	af 92       	push	r10
    1c06:	bf 92       	push	r11
    1c08:	cf 92       	push	r12
    1c0a:	df 92       	push	r13
    1c0c:	ef 92       	push	r14
    1c0e:	ff 92       	push	r15
    1c10:	0f 93       	push	r16
    1c12:	1f 93       	push	r17
    1c14:	cf 93       	push	r28
    1c16:	df 93       	push	r29
    1c18:	cd b7       	in	r28, 0x3d	; 61
    1c1a:	de b7       	in	r29, 0x3e	; 62
    1c1c:	ca 1b       	sub	r28, r26
    1c1e:	db 0b       	sbc	r29, r27
    1c20:	cd bf       	out	0x3d, r28	; 61
    1c22:	de bf       	out	0x3e, r29	; 62
    1c24:	19 94       	eijmp

00001c26 <__epilogue_restores__>:
    1c26:	2a 88       	ldd	r2, Y+18	; 0x12
    1c28:	39 88       	ldd	r3, Y+17	; 0x11
    1c2a:	48 88       	ldd	r4, Y+16	; 0x10
    1c2c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c2e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c30:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c32:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c34:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c36:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c38:	b9 84       	ldd	r11, Y+9	; 0x09
    1c3a:	c8 84       	ldd	r12, Y+8	; 0x08
    1c3c:	df 80       	ldd	r13, Y+7	; 0x07
    1c3e:	ee 80       	ldd	r14, Y+6	; 0x06
    1c40:	fd 80       	ldd	r15, Y+5	; 0x05
    1c42:	0c 81       	ldd	r16, Y+4	; 0x04
    1c44:	1b 81       	ldd	r17, Y+3	; 0x03
    1c46:	aa 81       	ldd	r26, Y+2	; 0x02
    1c48:	b9 81       	ldd	r27, Y+1	; 0x01
    1c4a:	ce 0f       	add	r28, r30
    1c4c:	d1 1d       	adc	r29, r1
    1c4e:	cd bf       	out	0x3d, r28	; 61
    1c50:	de bf       	out	0x3e, r29	; 62
    1c52:	ed 01       	movw	r28, r26
    1c54:	08 95       	ret

00001c56 <_exit>:
    1c56:	f8 94       	cli

00001c58 <__stop_program>:
    1c58:	ff cf       	rjmp	.-2      	; 0x1c58 <__stop_program>
